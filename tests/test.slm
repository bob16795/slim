inc stdlib.slm
inc os.slm

const TEST_COUNT 13

var tmpbuffer 128
var tmpname 64

var failed 1
var passed 1
    
proc runcmdstdout 1 0
  (os.fork)
  copy 0 == if [
    covr envp swap copy read
  
    sysc.EXECVE sys3 disc
    disc disc
    -1
    quit
  ]
  copy 0 > if [
    {parent}
  
    NULL
    0
    os.waitsig
    -1
    sysc.WAIT4 sys4 0 < if (os.deverr)
    disc disc
    ret
  ]
  0 != if [
    "ERROR" (cstr.println)
  ]
  disc
  ret
end

proc runtest 1 0
  tmpbuffer
  "/usr/bin/rm" put int.SIZE +
  "-f" put int.SIZE +
  "tester" put int.SIZE +
  "temp.fasm" put int.SIZE +
  NULL put disc

  tmpbuffer (os.execcmd)

  3 1 (log.level)
  "SUT" "Run: " (log.msg)
  copy (log.cat)
  (log.log)

  tmpbuffer
  "../slim" put int.SIZE +
  "-i" put int.SIZE +
  "../lib" put int.SIZE +
  "-o" put int.SIZE +
  "tester" put int.SIZE +
  swap put int.SIZE +
  NULL put disc

  tmpbuffer (os.execcmd)
  
  os.waitsig read 0 != if [
    1 1 (log.level)
    "BAD" "Test Failed to compile, code=" (log.msg)
    os.waitsig read (int.cstr) (log.cat)
    (log.log)

    ret
  ]
  
  tmpbuffer
  "tester" put int.SIZE +
  NULL put disc

  tmpbuffer (runcmdstdout)
  
  os.waitsig read 0 != if [
    1 1 (log.level)
    "BAD" "Test Failed, code=" (log.msg)
    os.waitsig read (int.cstr) (log.cat)
    (log.log)

    failed
    copy readc 1 +
    putc disc

    ret
  ]
  passed
  copy readc 1 +
  putc disc
  
  ret
end

proc main 0 0
  0
  do
    1 +
    tmpname (cstr.clear)
    "test" (cstr.copy) disc
    covr (int.cstr) (cstr.cat)
    ".slm" (cstr.cat)
    (runtest)

    copy TEST_COUNT <
  end
  disc
  (cstr.cr)

  2 1 (log.level)
  "PAS" "Passed " (log.msg)
  passed readc (int.cstr) (log.cat)
  " Tests" (log.cat)
  (log.log)

  failed readc
  copy 0 != if [
    1 1 (log.level)
    "ERR" "Failed " (log.msg)
    copy (int.cstr) (log.cat)
    " Tests" (log.cat)
    (log.log)

    disc 255
  ]
  quit
  ret
end
