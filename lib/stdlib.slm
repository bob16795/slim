{
args: pointer
result: 

prints a string
}
proc print 1 0 
  copy 
  read
  0 == if [disc ret]
  do
    { read the current char }
    copy 
    read
    dump
    
    { increase the address }
    1 +

    { read the next address }
    copy
    read
    
    { convert to a byte }
    255 &&
    0 !=
  end
  disc
  ret
end

{
args:
result:

prints a new line
}
proc endl 0 0
  { print new line }
  10
  dump
  ret
end

{
prints
}
proc println 1 0
  (print)
  (endl)
  ret
end

{
args: int
result: pointer

gets the nth arguent from the command line
}
proc args 1 1
  copy argc - 0 > if ["Bad arg" (println) disc quit]
  8 * 
  argv +

  read
  ret
end

{
args: pointer pointer
result: 

copy a string from a pointer to another
}
proc strcpy 2 2
  covr
  covr
  do
    covr
    covr
    read 255 &&

    putc
    disc

    copy read 255 && 0 ==
    if [disc disc ret]

    swap 1 +
    swap 1 +
    1
  end
  disc
  disc
  ret
end

{
args: pointer pointer
result: int

compares strings, returns 1 if they are not equal
}
proc streq 2 1
  1 -
  swap
  1 -
  do
    1 +
    swap
    1 +
    covr
    read 255 &&
    covr
    read 255 &&
    covr 0 ==
    covr 0 ==
    &&
    if [
      disc
      disc
      disc
      disc
      1
      ret
      ]
    covr 0 ==
    covr 0 ==
    !=
    if [
      disc
      disc
      disc
      disc
      0
      ret
    ]
    ==
  end
  disc
  disc
  0
  ret
end

{
args: pointer int int
result: int

opens a file
}
proc open 3 1
  2
  sys3
  
  copy 0 < if ["Error opening file" (println) disc quit]
  ret
end

{
args: int
result:

closes a file
}
proc close 1 0
  3
  sys1

  0 < if ["Error closing file" (println) quit]
  ret
end

{
args: int ptr
result: int

writes data to a file
}
proc write 3 0
  1
  sys3

  0 < if ["Error writing file" (println) quit]
  ret
end

{
args: int ptr
result: int

writes data to a file
}
proc read 3 1
  0
  sys3

  1 < 0 == {if ["Error reading file" (println) quit]}
  ret
end

{
args: int
result: ptr

converts a int to a string
}
proc intstr 1 1

  ret
end

proc strlen 1 1
  0
  do
    1 +
    covr
    covr +
    read 255 &&
    0 !=
  end

  swap disc
  ret
end
