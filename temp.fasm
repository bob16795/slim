format ELF64
section '.text' executable
public _start

print:
    mov r10, rsp
    sub rsp, 8
    mov [rsp], al
    mov edi, 1
    mov rsi, rsp
    mov edx, 1
    mov eax, 1
    syscall
    mov rsp, r10
    ret
addr_0:
addr_1:
addr_2:
addr_3:
addr_4:
addr_5:
addr_6:
addr_7:
addr_8:
addr_9:
addr_10:
addr_11:
addr_12:
addr_13:
addr_14:
    ; - proc len 1 1
addr_15:
    pop rax
    push rax
    push rax
addr_16:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_17:
    mov qword rax, 0
    push rax
addr_18:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_19:
    pop rbx
    test rbx, rbx
    jz addr_21
addr_20:
addr_20_0:
    pop rax
addr_20_1:
    mov qword rax, 0
    push rax
addr_20_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_20_3:
addr_21:
    pop rax
    push rax
    push rax
addr_22:
addr_23:
    mov qword rax, 1
    push rax
addr_24:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_25:
    pop rax
    push rax
    push rax
addr_26:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_27:
    pop rbx
    test rbx, rbx
    jz addr_28
    jmp addr_22
addr_28:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_29:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_30:
    pop rax
    pop rbx
    push rax
    push rbx
addr_31:
    pop rax
addr_32:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_33:
addr_34:
    ; - proc print 1 0
addr_35:
    pop rax
    push rax
    push rax
addr_36:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_37
    jmp addr_15
addr_37:
    pop rax
    pop rbx
    push rax
    push rbx
addr_38:
    mov qword rax, 1
    push rax
addr_39:
    mov qword rax, 1
    push rax
addr_40:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_41:
    pop rax
addr_42:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_43:
addr_44:
    ; - proc cr 0 0
addr_45:
    push 1
    push str_0
addr_46:
    mov qword rax, 1
    push rax
addr_47:
    mov qword rax, 1
    push rax
addr_48:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_49:
    pop rax
addr_50:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_51:
addr_52:
    ; - proc println 1 0
addr_53:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_54
    jmp addr_35
addr_54:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_55
    jmp addr_45
addr_55:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_56:
addr_57:
    ; - proc eq 2 1
addr_58:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_59:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_60:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_61:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_62:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_63:
    pop rbx
    test rbx, rbx
    jz addr_65
addr_64:
addr_64_0:
    pop rax
addr_64_1:
    pop rax
addr_64_2:
    mov qword rax, 0
    push rax
addr_64_3:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_64_4:
addr_65:
    mov qword rax, 1
    push rax
addr_66:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_67:
    pop rax
    pop rbx
    push rax
    push rbx
addr_68:
    mov qword rax, 1
    push rax
addr_69:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_70:
addr_71:
    mov qword rax, 1
    push rax
addr_72:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_73:
    pop rax
    pop rbx
    push rax
    push rbx
addr_74:
    mov qword rax, 1
    push rax
addr_75:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_76:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_77:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_78:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_79:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_80:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_81:
    mov qword rax, 0
    push rax
addr_82:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_83:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_84:
    mov qword rax, 0
    push rax
addr_85:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_86:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_87:
    pop rbx
    test rbx, rbx
    jz addr_89
addr_88:
addr_88_0:
    pop rax
addr_88_1:
    pop rax
addr_88_2:
    pop rax
addr_88_3:
    pop rax
addr_88_4:
    mov qword rax, 1
    push rax
addr_88_5:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_88_6:
addr_89:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_90:
    mov qword rax, 0
    push rax
addr_91:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_92:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_93:
    mov qword rax, 0
    push rax
addr_94:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_95:
    pop rbx
    pop rax
    or rax, rbx
    push rax
addr_96:
    pop rbx
    test rbx, rbx
    jz addr_98
addr_97:
addr_97_0:
    pop rax
addr_97_1:
    pop rax
addr_97_2:
    pop rax
addr_97_3:
    pop rax
addr_97_4:
    mov qword rax, 0
    push rax
addr_97_5:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_97_6:
addr_98:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_99:
    pop rbx
    test rbx, rbx
    jz addr_100
    jmp addr_70
addr_100:
    pop rax
addr_101:
    pop rax
addr_102:
    mov qword rax, 0
    push rax
addr_103:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_104:
addr_105:
    ; - proc copy 2 2
addr_106:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_107:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_108:
addr_109:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_110:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_111:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_112:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_113:
    pop rax
addr_114:
    pop rax
    pop rbx
    push rax
    push rbx
addr_115:
    mov qword rax, 1
    push rax
addr_116:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_117:
    pop rax
    pop rbx
    push rax
    push rbx
addr_118:
    mov qword rax, 1
    push rax
addr_119:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_120:
    pop rax
    push rax
    push rax
addr_121:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_122:
    mov qword rax, 0
    push rax
addr_123:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_124:
    pop rbx
    test rbx, rbx
    jz addr_125
    jmp addr_108
addr_125:
    pop rax
    pop rbx
    push rax
    push rbx
addr_126:
    mov qword rax, 1
    push rax
addr_127:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_128:
    mov qword rax, 0
    push rax
addr_129:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_130:
    pop rax
addr_131:
    pop rax
addr_132:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_133:
addr_134:
    ; - proc last 1 1
addr_135:
    mov qword rax, 1
    push rax
addr_136:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_137:
addr_138:
    mov qword rax, 1
    push rax
addr_139:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_140:
    pop rax
    push rax
    push rax
addr_141:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_142:
    mov qword rax, 0
    push rax
addr_143:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_144:
    pop rbx
    test rbx, rbx
    jz addr_145
    jmp addr_137
addr_145:
    mov qword rax, 1
    push rax
addr_146:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_147:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_148:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_149:
addr_150:
    ; - proc clear 1 1
addr_151:
    pop rax
    push rax
    push rax
addr_152:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_153:
    mov qword rax, 0
    push rax
addr_154:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_155:
    pop rbx
    test rbx, rbx
    jz addr_157
addr_156:
addr_156_0:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_156_1:
addr_157:
    pop rax
    push rax
    push rax
addr_158:
addr_159:
    pop rax
    push rax
    push rax
addr_160:
    mov qword rax, 0
    push rax
addr_161:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_162:
    pop rax
addr_163:
    mov qword rax, 1
    push rax
addr_164:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_165:
    pop rax
    push rax
    push rax
addr_166:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_167:
    pop rbx
    test rbx, rbx
    jz addr_168
    jmp addr_158
addr_168:
    pop rax
addr_169:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_170:
addr_171:
    ; - proc cat 2 1
addr_172:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_173:
    pop rax
    push rax
    push rax
addr_174:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_175
    jmp addr_15
addr_175:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_176:
    pop rax
    pop rbx
    push rax
    push rbx
addr_177:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_178
    jmp addr_106
addr_178:
    pop rax
addr_179:
    pop rax
addr_180:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_181:
addr_182:
    ; - proc isnum 1 1
addr_183:
    push mem+0
addr_184:
    mov qword rax, 48
    push rax
addr_185:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_186:
    pop rax
addr_187:
    push mem+1
addr_188:
    mov qword rax, 57
    push rax
addr_189:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_190:
    pop rax
addr_191:
    pop rax
    push rax
    push rax
addr_192:
    pop rax
    push rax
    push rax
addr_193:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_194
    jmp addr_15
addr_194:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_195:
    mov qword rax, 1
    push rax
addr_196:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_197:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_198:
    pop rax
    push rax
    push rax
addr_199:
    mov qword rax, 98
    push rax
addr_200:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_201:
    pop rbx
    test rbx, rbx
    jz addr_203
addr_202:
addr_202_0:
    push mem+1
addr_202_1:
    mov qword rax, 49
    push rax
addr_202_2:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_202_3:
    pop rax
addr_202_4:
addr_203:
    pop rax
    push rax
    push rax
addr_204:
    mov qword rax, 104
    push rax
addr_205:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_206:
    pop rbx
    test rbx, rbx
    jz addr_208
addr_207:
addr_207_0:
    push mem+1
addr_207_1:
    mov qword rax, 102
    push rax
addr_207_2:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_207_3:
    pop rax
addr_207_4:
addr_208:
    pop rax
addr_209:
    pop rax
    push rax
    push rax
addr_210:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_211:
    mov qword rax, 45
    push rax
addr_212:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_213:
    pop rbx
    test rbx, rbx
    jz addr_215
addr_214:
addr_214_0:
    mov qword rax, 1
    push rax
addr_214_1:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_214_2:
addr_215:
addr_216:
    pop rax
    push rax
    push rax
addr_217:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_218:
    pop rax
    push rax
    push rax
addr_219:
    push mem+0
addr_220:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_221:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_222:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_223:
    push mem+1
addr_224:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_225:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_226:
    pop rbx
    pop rax
    or rax, rbx
    push rax
addr_227:
    pop rbx
    test rbx, rbx
    jz addr_229
addr_228:
addr_228_0:
    pop rax
addr_228_1:
    pop rax
    push rax
    push rax
addr_228_2:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_228_3:
    mov qword rax, 98
    push rax
addr_228_4:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_228_5:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_228_6:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_228_7:
    mov qword rax, 104
    push rax
addr_228_8:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_228_9:
    pop rbx
    pop rax
    or rax, rbx
    push rax
addr_228_10:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_228_11:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_228_12
    jmp addr_15
addr_228_12:
    mov qword rax, 1
    push rax
addr_228_13:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_228_14:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_228_15:
    pop rax
    pop rbx
    push rax
    push rbx
addr_228_16:
    pop rax
addr_228_17:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_228_18:
addr_229:
    pop rax
addr_230:
    mov qword rax, 1
    push rax
addr_231:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_232:
    pop rax
    push rax
    push rax
addr_233:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_234:
    mov qword rax, 0
    push rax
addr_235:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_236:
    pop rbx
    test rbx, rbx
    jz addr_237
    jmp addr_215
addr_237:
    pop rax
addr_238:
    mov qword rax, 1
    push rax
addr_239:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_240:
addr_241:
    ; - proc tonum 1 1
addr_242:
    pop rax
    push rax
    push rax
addr_243:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_244
    jmp addr_183
addr_244:
    pop rax
    xor rax, 1
    push rax
addr_245:
    pop rbx
    test rbx, rbx
    jz addr_247
addr_246:
addr_246_0:
    pop rax
    push rax
    push rax
addr_246_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_246_2
    jmp addr_53
addr_246_2:
    push str_1
addr_246_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_246_4
    jmp addr_53
addr_246_4:
    pop rax
addr_246_5:
    mov qword rax, -1
    push rax
addr_246_6:
    mov rax, 60
    pop rdi
    syscall
addr_246_7:
addr_247:
    push mem+2
addr_248:
    mov qword rax, 10
    push rax
addr_249:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_250:
    pop rax
addr_251:
    pop rax
    push rax
    push rax
addr_252:
    pop rax
    push rax
    push rax
addr_253:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_254
    jmp addr_15
addr_254:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_255:
    mov qword rax, 1
    push rax
addr_256:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_257:
    pop rax
    push rax
    push rax
addr_258:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_259:
    mov qword rax, 98
    push rax
addr_260:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_261:
    pop rbx
    test rbx, rbx
    jz addr_263
addr_262:
addr_262_0:
    push mem+2
addr_262_1:
    mov qword rax, 2
    push rax
addr_262_2:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_262_3:
    pop rax
addr_262_4:
addr_263:
    pop rax
    push rax
    push rax
addr_264:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_265:
    mov qword rax, 104
    push rax
addr_266:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_267:
    pop rbx
    test rbx, rbx
    jz addr_269
addr_268:
addr_268_0:
    push mem+2
addr_268_1:
    mov qword rax, 16
    push rax
addr_268_2:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_268_3:
    pop rax
addr_268_4:
addr_269:
    pop rax
addr_270:
    mov qword rax, 0
    push rax
addr_271:
addr_272:
    push mem+2
addr_273:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_274:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_275:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_276:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_277:
    pop rax
    push rax
    push rax
addr_278:
    mov qword rax, 70
    push rax
addr_279:
    mov qword rax, 1
    push rax
addr_280:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_281:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_282:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_283:
    mov qword rax, 65
    push rax
addr_284:
    mov qword rax, 1
    push rax
addr_285:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_286:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_287:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_288:
    pop rbx
    test rbx, rbx
    jz addr_290
addr_289:
addr_289_0:
    mov qword rax, 65
    push rax
addr_289_1:
    mov qword rax, 10
    push rax
addr_289_2:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_289_3:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_289_4:
    mov qword rax, 48
    push rax
addr_289_5:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_289_6:
addr_290:
    mov qword rax, 48
    push rax
addr_291:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_292:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_293:
    pop rax
    pop rbx
    push rax
    push rbx
addr_294:
    mov qword rax, 1
    push rax
addr_295:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_296:
    pop rax
    pop rbx
    push rax
    push rbx
addr_297:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_298:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_299:
    pop rax
    push rax
    push rax
addr_300:
    mov qword rax, 0
    push rax
addr_301:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_302:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_303:
    mov qword rax, 98
    push rax
addr_304:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_305:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_306:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_307:
    mov qword rax, 104
    push rax
addr_308:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_309:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_310:
    pop rax
    pop rbx
    push rax
    push rbx
addr_311:
    pop rax
addr_312:
    pop rbx
    test rbx, rbx
    jz addr_313
    jmp addr_271
addr_313:
    pop rax
    pop rbx
    push rax
    push rbx
addr_314:
    pop rax
addr_315:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_316:
addr_317:
    ; - proc split 3 2
addr_318:
    pop rax
    pop rbx
    push rax
    push rbx
addr_319:
    push mem+3
addr_320:
    pop rax
    pop rbx
    push rax
    push rbx
addr_321:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_322:
    pop rax
addr_323:
    push mem+4
addr_324:
    pop rax
    pop rbx
    push rax
    push rbx
addr_325:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_326:
    pop rax
addr_327:
    push mem+4
addr_328:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_329:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_330
    jmp addr_151
addr_330:
addr_331:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_332:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_333:
    push mem+3
addr_334:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_335:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_336:
    pop rbx
    test rbx, rbx
    jz addr_338
addr_337:
addr_337_0:
    pop rax
addr_337_1:
    mov qword rax, 1
    push rax
addr_337_2:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_337_3:
    push mem+4
addr_337_4:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_337_5:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_337_6:
addr_338:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_339:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_340:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_341:
    pop rax
    pop rbx
    push rax
    push rbx
addr_342:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_343:
    pop rax
addr_344:
    pop rax
    pop rbx
    push rax
    push rbx
addr_345:
    mov qword rax, 1
    push rax
addr_346:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_347:
    pop rax
    pop rbx
    push rax
    push rbx
addr_348:
    mov qword rax, 1
    push rax
addr_349:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_350:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_351:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_352:
    mov qword rax, 0
    push rax
addr_353:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_354:
    pop rbx
    test rbx, rbx
    jz addr_355
    jmp addr_330
addr_355:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_356:
addr_357:
addr_358:
addr_359:
addr_360:
addr_361:
    ; - proc gettmp 0 1
addr_362:
    push mem+20
addr_363:
    mov qword rax, 30
    push rax
addr_364:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_365:
    push mem+12
addr_366:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_367:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_368:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_369:
addr_370:
    ; - proc inctmpidx 0 0
addr_371:
    push mem+12
addr_372:
    push mem+12
addr_373:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_374:
    mov qword rax, 1
    push rax
addr_375:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_376:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_377:
    pop rax
addr_378:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_379:
addr_380:
    ; - proc cstr 1 1
addr_381:
addr_382:
    mov qword rax, 10
    push rax
addr_383:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_384:
    mov qword rax, 48
    push rax
addr_385:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_386:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_387
    jmp addr_362
addr_387:
    pop rax
    pop rbx
    push rax
    push rbx
addr_388:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_389:
    pop rax
addr_390:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_391
    jmp addr_371
addr_391:
    pop rax
    push rax
    push rax
addr_392:
    mov qword rax, 0
    push rax
addr_393:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_394:
    pop rbx
    test rbx, rbx
    jz addr_395
    jmp addr_381
addr_395:
    pop rax
addr_396:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_397
    jmp addr_362
addr_397:
    mov qword rax, 1
    push rax
addr_398:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_399:
    push mem+12
addr_400:
    mov qword rax, 0
    push rax
addr_401:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_402:
    pop rax
addr_403:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_404:
addr_405:
    ; - proc cstrhex 1 1
addr_406:
addr_407:
    mov qword rax, 16
    push rax
addr_408:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_409:
    pop rax
    push rax
    push rax
addr_410:
    mov qword rax, 9
    push rax
addr_411:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_412:
    pop rbx
    test rbx, rbx
    jz addr_414
addr_413:
addr_413_0:
    mov qword rax, 97
    push rax
addr_413_1:
    mov qword rax, 10
    push rax
addr_413_2:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_413_3:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_413_4:
addr_414:
    pop rax
    push rax
    push rax
addr_415:
    mov qword rax, 10
    push rax
addr_416:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_417:
    pop rbx
    test rbx, rbx
    jz addr_419
addr_418:
addr_418_0:
    mov qword rax, 48
    push rax
addr_418_1:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_418_2:
addr_419:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_420
    jmp addr_362
addr_420:
    pop rax
    pop rbx
    push rax
    push rbx
addr_421:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_422:
    pop rax
addr_423:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_424
    jmp addr_371
addr_424:
    pop rax
    push rax
    push rax
addr_425:
    mov qword rax, 0
    push rax
addr_426:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_427:
    pop rbx
    test rbx, rbx
    jz addr_428
    jmp addr_406
addr_428:
    pop rax
addr_429:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_430
    jmp addr_362
addr_430:
    mov qword rax, 36
    push rax
addr_431:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_432:
    pop rax
addr_433:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_434
    jmp addr_371
addr_434:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_435
    jmp addr_362
addr_435:
    mov qword rax, 1
    push rax
addr_436:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_437:
    push mem+12
addr_438:
    mov qword rax, 0
    push rax
addr_439:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_440:
    pop rax
addr_441:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_442:
addr_443:
    ; - proc print 1 0
addr_444:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_445
    jmp addr_381
addr_445:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_446
    jmp addr_35
addr_446:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_447
    jmp addr_45
addr_447:
    push mem+12
addr_448:
    mov qword rax, 0
    push rax
addr_449:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_450:
    pop rax
addr_451:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_452:
addr_453:
    ; - proc printhex 1 0
addr_454:
addr_455:
    mov qword rax, 16
    push rax
addr_456:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_457:
    pop rax
    push rax
    push rax
addr_458:
    mov qword rax, 9
    push rax
addr_459:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_460:
    pop rbx
    test rbx, rbx
    jz addr_462
addr_461:
addr_461_0:
    mov qword rax, 97
    push rax
addr_461_1:
    mov qword rax, 10
    push rax
addr_461_2:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_461_3:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_461_4:
addr_462:
    pop rax
    push rax
    push rax
addr_463:
    mov qword rax, 10
    push rax
addr_464:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_465:
    pop rbx
    test rbx, rbx
    jz addr_467
addr_466:
addr_466_0:
    mov qword rax, 48
    push rax
addr_466_1:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_466_2:
addr_467:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_468
    jmp addr_362
addr_468:
    pop rax
    pop rbx
    push rax
    push rbx
addr_469:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_470:
    pop rax
addr_471:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_472
    jmp addr_371
addr_472:
    pop rax
    push rax
    push rax
addr_473:
    mov qword rax, 0
    push rax
addr_474:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_475:
    pop rbx
    test rbx, rbx
    jz addr_476
    jmp addr_454
addr_476:
    pop rax
addr_477:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_478
    jmp addr_362
addr_478:
    mov qword rax, 120
    push rax
addr_479:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_480:
    pop rax
addr_481:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_482
    jmp addr_371
addr_482:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_483
    jmp addr_362
addr_483:
    mov qword rax, 48
    push rax
addr_484:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_485:
    pop rax
addr_486:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_487
    jmp addr_371
addr_487:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_488
    jmp addr_362
addr_488:
    mov qword rax, 1
    push rax
addr_489:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_490:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_491
    jmp addr_35
addr_491:
    push mem+12
addr_492:
    mov qword rax, 0
    push rax
addr_493:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_494:
    pop rax
addr_495:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_496
    jmp addr_45
addr_496:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_497:
addr_498:
addr_499:
addr_500:
addr_501:
addr_502:
addr_503:
addr_504:
addr_505:
addr_506:
addr_507:
addr_508:
addr_509:
    ; - proc isentry 1 1
addr_510:
    pop rax
    push rax
    push rax
addr_511:
    pop rax
    push rax
    push rax
addr_512:
    mov qword rax, 0
    push rax
addr_513:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_514:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_515:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_516:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_517:
    mov qword rax, 8
    push rax
addr_518:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_519:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_520:
    mov qword rax, 1
    push rax
addr_521:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_522:
    mov qword rax, 0
    push rax
addr_523:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_524:
    pop rbx
    pop rax
    and rax, rbx
    push rax
addr_525:
    pop rax
    pop rbx
    push rax
    push rbx
addr_526:
    pop rax
addr_527:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_528:
addr_529:
addr_530:
addr_531:
addr_532:
    ; - proc copy 3 0
addr_533:
    push mem+52
addr_534:
    pop rax
    pop rbx
    push rax
    push rbx
addr_535:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_536:
    pop rax
addr_537:
addr_538:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_539:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_540:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_541:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_542:
    pop rax
addr_543:
    pop rax
    pop rbx
    push rax
    push rbx
addr_544:
    mov qword rax, 1
    push rax
addr_545:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_546:
    pop rax
    pop rbx
    push rax
    push rbx
addr_547:
    mov qword rax, 1
    push rax
addr_548:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_549:
    push mem+52
addr_550:
    push mem+52
addr_551:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_552:
    mov qword rax, 1
    push rax
addr_553:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_554:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_555:
    pop rax
addr_556:
    push mem+52
addr_557:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_558:
    mov qword rax, 0
    push rax
addr_559:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_560:
    pop rbx
    test rbx, rbx
    jz addr_561
    jmp addr_537
addr_561:
    pop rax
addr_562:
    pop rax
addr_563:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_564:
addr_565:
    ; - proc eq 3 1
addr_566:
    push mem+52
addr_567:
    pop rax
    pop rbx
    push rax
    push rbx
addr_568:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_569:
    pop rax
addr_570:
addr_571:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_572:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_573:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_574:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_575:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_576:
    pop rbx
    test rbx, rbx
    jz addr_578
addr_577:
addr_577_0:
    pop rax
addr_577_1:
    pop rax
addr_577_2:
    mov qword rax, 0
    push rax
addr_577_3:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_577_4:
addr_578:
    push mem+52
addr_579:
    push mem+52
addr_580:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_581:
    mov qword rax, 1
    push rax
addr_582:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_583:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_584:
    pop rax
addr_585:
    push mem+52
addr_586:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_587:
    mov qword rax, 0
    push rax
addr_588:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_589:
    pop rbx
    test rbx, rbx
    jz addr_590
    jmp addr_570
addr_590:
    pop rax
addr_591:
    pop rax
addr_592:
    mov qword rax, 1
    push rax
addr_593:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_594:
addr_595:
    ; - proc zero 2 0
addr_596:
    push mem+52
addr_597:
    pop rax
    pop rbx
    push rax
    push rbx
addr_598:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_599:
    pop rax
addr_600:
addr_601:
    pop rax
    push rax
    push rax
addr_602:
    mov qword rax, 0
    push rax
addr_603:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_604:
    pop rax
addr_605:
    mov qword rax, 1
    push rax
addr_606:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_607:
    push mem+52
addr_608:
    push mem+52
addr_609:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_610:
    mov qword rax, 1
    push rax
addr_611:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_612:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_613:
    pop rax
addr_614:
    push mem+52
addr_615:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_616:
    mov qword rax, 0
    push rax
addr_617:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_618:
    pop rbx
    test rbx, rbx
    jz addr_619
    jmp addr_600
addr_619:
    pop rax
addr_620:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_621:
addr_622:
addr_623:
addr_624:
addr_625:
addr_626:
addr_627:
addr_628:
addr_629:
addr_630:
addr_631:
    ; - proc allocpage 0 0
addr_632:
    push mem+68
addr_633:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_634:
    mov qword rax, 64000
    push rax
addr_635:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_636:
    pop rax
    push rax
    push rax
addr_637:
    push mem+68
addr_638:
    pop rax
    pop rbx
    push rax
    push rbx
addr_639:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_640:
    pop rax
addr_641:
    mov qword rax, 12
    push rax
addr_642:
    pop rax
    pop rdi
    syscall
    push rax
addr_643:
    mov qword rax, 0
    push rax
addr_644:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_645:
    pop rbx
    test rbx, rbx
    jz addr_647
addr_646:
addr_646_0:
    push str_2
addr_646_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_646_2
    jmp addr_53
addr_646_2:
addr_647:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_648:
addr_649:
    ; - proc init 0 0
addr_650:
    push mem+92
addr_651:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_652:
    pop rbx
    test rbx, rbx
    jz addr_654
addr_653:
addr_653_0:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_653_1:
addr_654:
    push mem+92
addr_655:
    mov qword rax, 1
    push rax
addr_656:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_657:
    pop rax
addr_658:
    push mem+60
addr_659:
    mov qword rax, 0
    push rax
addr_660:
    mov qword rax, 12
    push rax
addr_661:
    pop rax
    pop rdi
    syscall
    push rax
addr_662:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_663:
    pop rax
addr_664:
    push mem+68
addr_665:
    push mem+60
addr_666:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_667:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_668:
    pop rax
addr_669:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_670
    jmp addr_632
addr_670:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_671:
addr_672:
    ; - proc map 0 0
addr_673:
    push mem+84
addr_674:
    mov qword rax, 0
    push rax
addr_675:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_676:
    pop rax
addr_677:
    push str_3
addr_678:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_679
    jmp addr_53
addr_679:
    push str_4
addr_680:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_681
    jmp addr_53
addr_681:
    push str_5
addr_682:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_683
    jmp addr_35
addr_683:
    push mem+68
addr_684:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_685:
    push mem+60
addr_686:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_687:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_688:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_689
    jmp addr_444
addr_689:
    push mem+60
addr_690:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_691:
    mov qword rax, 64
    push rax
addr_692:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_693:
addr_694:
    mov qword rax, 64
    push rax
addr_695:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_696:
    pop rax
    push rax
    push rax
addr_697:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_698
    jmp addr_510
addr_698:
    pop rbx
    test rbx, rbx
    jz addr_700
addr_699:
addr_699_0:
    push str_6
addr_699_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_699_2
    jmp addr_53
addr_699_2:
    push str_7
addr_699_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_699_4
    jmp addr_35
addr_699_4:
    pop rax
    push rax
    push rax
addr_699_5:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_699_6
    jmp addr_454
addr_699_6:
    push str_8
addr_699_7:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_699_8
    jmp addr_35
addr_699_8:
    pop rax
    push rax
    push rax
addr_699_9:
    mov qword rax, 9
    push rax
addr_699_10:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_699_11:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_699_12:
    pop rax
    push rax
    push rax
addr_699_13:
    push mem+84
addr_699_14:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_699_15:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_699_16:
    push mem+84
addr_699_17:
    pop rax
    pop rbx
    push rax
    push rbx
addr_699_18:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_699_19:
    pop rax
addr_699_20:
    pop rax
    push rax
    push rax
addr_699_21:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_699_22
    jmp addr_444
addr_699_22:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_699_23:
    mov qword rax, 64
    push rax
addr_699_24:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_699_25:
addr_700:
    pop rax
    push rax
    push rax
addr_701:
    push mem+68
addr_702:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_703:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_704:
    pop rbx
    test rbx, rbx
    jz addr_705
    jmp addr_693
addr_705:
    pop rax
addr_706:
    push str_9
addr_707:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_708
    jmp addr_35
addr_708:
    push mem+84
addr_709:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_710:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_711
    jmp addr_444
addr_711:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_712
    jmp addr_45
addr_712:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_713:
addr_714:
    ; - proc alloc 1 1
addr_715:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_716
    jmp addr_650
addr_716:
    mov qword rax, 17
    push rax
addr_717:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_718:
    pop rax
    push rax
    push rax
addr_719:
    mov qword rax, 64
    push rax
addr_720:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_721:
    pop rax
    pop rbx
    push rax
    push rbx
addr_722:
    pop rax
addr_723:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_724:
    mov qword rax, 64
    push rax
addr_725:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_726:
    push mem+76
addr_727:
    pop rax
    pop rbx
    push rax
    push rbx
addr_728:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_729:
    pop rax
addr_730:
    mov qword rax, 0
    push rax
addr_731:
    push mem+60
addr_732:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_733:
    pop rax
    pop rbx
    push rax
    push rbx
addr_734:
    mov qword rax, 64
    push rax
addr_735:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_736:
    pop rax
    pop rbx
    push rax
    push rbx
addr_737:
    mov qword rax, 64
    push rax
addr_738:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_739:
addr_740:
    pop rax
    pop rbx
    push rax
    push rbx
addr_741:
    mov qword rax, 64
    push rax
addr_742:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_743:
    pop rax
    pop rbx
    push rax
    push rbx
addr_744:
    mov qword rax, 64
    push rax
addr_745:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_746:
    pop rax
    push rax
    push rax
addr_747:
    push mem+68
addr_748:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_749:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_750:
    pop rax
    xor rax, 1
    push rax
addr_751:
    pop rbx
    test rbx, rbx
    jz addr_753
addr_752:
addr_752_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_752_1
    jmp addr_632
addr_752_1:
addr_753:
    pop rax
    push rax
    push rax
addr_754:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_755
    jmp addr_510
addr_755:
    pop rbx
    test rbx, rbx
    jz addr_757
addr_756:
addr_756_0:
    pop rax
    push rax
    push rax
addr_756_1:
    mov qword rax, 9
    push rax
addr_756_2:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_756_3:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_756_4:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_756_5:
    pop rax
    pop rbx
    push rax
    push rbx
addr_756_6:
    pop rax
addr_756_7:
    mov qword rax, 0
    push rax
addr_756_8:
    mov qword rax, 64
    push rax
addr_756_9:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_756_10:
    pop rax
    pop rbx
    push rax
    push rbx
addr_756_11:
    mov qword rax, 64
    push rax
addr_756_12:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_756_13:
addr_757:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_758:
    push mem+76
addr_759:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_760:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_761:
    pop rbx
    test rbx, rbx
    jz addr_762
    jmp addr_739
addr_762:
    pop rax
    pop rbx
    push rax
    push rbx
addr_763:
    pop rax
addr_764:
    push mem+76
addr_765:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_766:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_767:
    pop rax
    push rax
    push rax
addr_768:
    mov qword rax, 9
    push rax
addr_769:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_770:
    push mem+76
addr_771:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_772:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_773:
    pop rax
addr_774:
    pop rax
    push rax
    push rax
addr_775:
    pop rax
    push rax
    push rax
addr_776:
    mov qword rax, 0
    push rax
addr_777:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_778:
    pop rax
    pop rbx
    push rax
    push rbx
addr_779:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_780:
    pop rax
addr_781:
    pop rax
    push rax
    push rax
addr_782:
    mov qword rax, 8
    push rax
addr_783:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_784:
    mov qword rax, 1
    push rax
addr_785:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_786:
    pop rax
addr_787:
    mov qword rax, 17
    push rax
addr_788:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_789:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_790:
addr_791:
    ; - proc zalloc 1 1
addr_792:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_793
    jmp addr_650
addr_793:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_794
    jmp addr_715
addr_794:
    pop rax
    push rax
    push rax
addr_795:
    pop rax
    push rax
    push rax
addr_796:
    mov qword rax, 17
    push rax
addr_797:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_798:
    mov qword rax, 9
    push rax
addr_799:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_800:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_801:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_802
    jmp addr_596
addr_802:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_803:
addr_804:
    ; - proc free 1 0
addr_805:
    mov qword rax, 17
    push rax
addr_806:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_807:
    pop rax
    push rax
    push rax
addr_808:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_809
    jmp addr_510
addr_809:
    pop rax
    xor rax, 1
    push rax
addr_810:
    pop rbx
    test rbx, rbx
    jz addr_812
addr_811:
addr_811_0:
    push str_10
addr_811_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_811_2
    jmp addr_53
addr_811_2:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_811_3
    jmp addr_454
addr_811_3:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_811_4:
addr_812:
    mov qword rax, 8
    push rax
addr_813:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_814:
    mov qword rax, 0
    push rax
addr_815:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_816:
    pop rax
addr_817:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_818:
addr_819:
    ; - proc tryfree 1 0
addr_820:
    mov qword rax, 17
    push rax
addr_821:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_822:
    pop rax
    push rax
    push rax
addr_823:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_824
    jmp addr_510
addr_824:
    pop rax
    xor rax, 1
    push rax
addr_825:
    pop rbx
    test rbx, rbx
    jz addr_827
addr_826:
addr_826_0:
    pop rax
addr_826_1:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_826_2:
addr_827:
    mov qword rax, 8
    push rax
addr_828:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_829:
    mov qword rax, 0
    push rax
addr_830:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_831:
    pop rax
addr_832:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_833:
addr_834:
    ; - proc realloc 2 1
addr_835:
    mov qword rax, 17
    push rax
addr_836:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_837:
    pop rax
    push rax
    push rax
addr_838:
    mov qword rax, 64
    push rax
addr_839:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_840:
    pop rax
    pop rbx
    push rax
    push rbx
addr_841:
    pop rax
addr_842:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_843:
    mov qword rax, 64
    push rax
addr_844:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_845:
    push mem+76
addr_846:
    pop rax
    pop rbx
    push rax
    push rbx
addr_847:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_848:
    pop rax
addr_849:
    mov qword rax, 17
    push rax
addr_850:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_851:
    pop rax
    push rax
    push rax
addr_852:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_853
    jmp addr_510
addr_853:
    pop rax
    xor rax, 1
    push rax
addr_854:
    pop rbx
    test rbx, rbx
    jz addr_856
addr_855:
addr_855_0:
    push str_11
addr_855_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_855_2
    jmp addr_53
addr_855_2:
addr_856:
    push mem+76
addr_857:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_858:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_859:
    mov qword rax, 9
    push rax
addr_860:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_861:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_862:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_863:
    pop rbx
    test rbx, rbx
    jz addr_865
addr_864:
addr_864_0:
    mov qword rax, 17
    push rax
addr_864_1:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_864_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_864_3:
addr_865:
    pop rax
    push rax
    push rax
addr_866:
    pop rax
    push rax
    push rax
addr_867:
    mov qword rax, 9
    push rax
addr_868:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_869:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_870:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_871:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_872:
    mov qword rax, 9
    push rax
addr_873:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_874:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_875:
    mov qword rax, 64
    push rax
addr_876:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_877:
    pop rax
    pop rbx
    push rax
    push rbx
addr_878:
    mov qword rax, 64
    push rax
addr_879:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_880:
addr_881:
    pop rax
    pop rbx
    push rax
    push rbx
addr_882:
    mov qword rax, 64
    push rax
addr_883:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_884:
    pop rax
    pop rbx
    push rax
    push rbx
addr_885:
    mov qword rax, 64
    push rax
addr_886:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_887:
    pop rax
    push rax
    push rax
addr_888:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_889
    jmp addr_510
addr_889:
    pop rbx
    test rbx, rbx
    jz addr_891
addr_890:
addr_890_0:
    pop rax
addr_890_1:
    pop rax
addr_890_2:
    pop rax
    push rax
    push rax
addr_890_3:
    mov qword rax, 17
    push rax
addr_890_4:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_890_5:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_890_6
    jmp addr_805
addr_890_6:
    push mem+76
addr_890_7:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_890_8:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_890_9
    jmp addr_715
addr_890_9:
    pop rax
    pop rbx
    push rax
    push rbx
addr_890_10:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_890_11:
    mov qword rax, 17
    push rax
addr_890_12:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_890_13:
    pop rax
    push rax
    push rax
addr_890_14:
    mov qword rax, 9
    push rax
addr_890_15:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_890_16:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_890_17:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_890_18
    jmp addr_533
addr_890_18:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_890_19:
addr_891:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_892:
    push mem+76
addr_893:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_894:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_895:
    pop rax
    xor rax, 1
    push rax
addr_896:
    pop rbx
    test rbx, rbx
    jz addr_897
    jmp addr_880
addr_897:
    pop rax
addr_898:
    pop rax
addr_899:
    pop rax
    push rax
    push rax
addr_900:
    mov qword rax, 9
    push rax
addr_901:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_902:
    push mem+76
addr_903:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_904:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_905:
    pop rax
addr_906:
    pop rax
    push rax
    push rax
addr_907:
    pop rax
    push rax
    push rax
addr_908:
    mov qword rax, 0
    push rax
addr_909:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_910:
    pop rax
    pop rbx
    push rax
    push rbx
addr_911:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_912:
    pop rax
addr_913:
    pop rax
    push rax
    push rax
addr_914:
    mov qword rax, 8
    push rax
addr_915:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_916:
    mov qword rax, 1
    push rax
addr_917:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_918:
    pop rax
addr_919:
    mov qword rax, 17
    push rax
addr_920:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_921:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_922:
addr_923:
addr_924:
addr_925:
addr_926:
addr_927:
addr_928:
addr_929:
addr_930:
addr_931:
addr_932:
addr_933:
addr_934:
    ; - proc level 2 0
addr_935:
    push mem+101
addr_936:
    mov qword rax, 0
    push rax
addr_937:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_938:
    pop rax
    pop rbx
    push rax
    push rbx
addr_939:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_940:
    pop rax
addr_941:
    push mem+101
addr_942:
    mov qword rax, 8
    push rax
addr_943:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_944:
    pop rax
    pop rbx
    push rax
    push rbx
addr_945:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_946:
    pop rax
addr_947:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_948:
addr_949:
    ; - proc msg 2 0
addr_950:
    push mem+101
addr_951:
    mov qword rax, 13
    push rax
addr_952:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_953:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_954
    jmp addr_151
addr_954:
    pop rax
    pop rbx
    push rax
    push rbx
addr_955:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_956
    jmp addr_242
addr_956:
    pop rax
addr_957:
    pop rax
addr_958:
    push mem+101
addr_959:
    mov qword rax, 9
    push rax
addr_960:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_961:
    pop rax
    pop rbx
    push rax
    push rbx
addr_962:
    mov qword rax, 3
    push rax
addr_963:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_964
    jmp addr_533
addr_964:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_965:
addr_966:
    ; - proc cat 1 0
addr_967:
    push mem+101
addr_968:
    mov qword rax, 13
    push rax
addr_969:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_970:
    pop rax
    pop rbx
    push rax
    push rbx
addr_971:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_972
    jmp addr_172
addr_972:
    pop rax
addr_973:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_974:
addr_975:
    ; - proc log 0 0
addr_976:
    push mem+101
addr_977:
    mov qword rax, 8
    push rax
addr_978:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_979:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_980:
    pop rbx
    test rbx, rbx
    jz addr_982
addr_981:
addr_981_0:
    push str_12
addr_981_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_981_2
    jmp addr_35
addr_981_2:
    push str_13
addr_981_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_981_4
    jmp addr_35
addr_981_4:
    push mem+101
addr_981_5:
    mov qword rax, 9
    push rax
addr_981_6:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_981_7:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_981_8
    jmp addr_35
addr_981_8:
    push str_14
addr_981_9:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_981_10
    jmp addr_35
addr_981_10:
    push mem+101
addr_981_11:
    mov qword rax, 13
    push rax
addr_981_12:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_981_13:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_981_14
    jmp addr_35
addr_981_14:
    push str_15
addr_981_15:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_981_16
    jmp addr_53
addr_981_16:
    mov qword rax, 0
    push rax
addr_981_17:
    mov qword rax, 0
    push rax
addr_981_18:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_981_19:
    mov rax, 60
    pop rdi
    syscall
addr_981_20:
addr_982:
    push str_16
addr_983:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_984
    jmp addr_35
addr_984:
    push mem+101
addr_985:
    mov qword rax, 9
    push rax
addr_986:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_987:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_988
    jmp addr_35
addr_988:
    push str_17
addr_989:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_990
    jmp addr_35
addr_990:
    push mem+101
addr_991:
    mov qword rax, 13
    push rax
addr_992:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_993:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_994
    jmp addr_53
addr_994:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_995:
addr_996:
addr_997:
addr_998:
    ; - enum
addr_999:
addr_1000:
addr_1001:
    ; - enum
addr_1002:
addr_1003:
addr_1004:
addr_1005:
addr_1006:
addr_1007:
addr_1008:
addr_1009:
addr_1010:
addr_1011:
addr_1012:
    ; - proc fork 0 1
addr_1013:
    mov qword rax, 57
    push rax
addr_1014:
    pop rax
    syscall
    push rax
addr_1015:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1016:
addr_1017:
    ; - proc deverr 0 0
addr_1018:
    push str_18
addr_1019:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1020
    jmp addr_53
addr_1020:
    mov qword rax, -1
    push rax
addr_1021:
    mov rax, 60
    pop rdi
    syscall
addr_1022:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1023:
addr_1024:
    ; - proc execcmd 1 0
addr_1025:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1026
    jmp addr_1013
addr_1026:
    pop rax
    push rax
    push rax
addr_1027:
    mov qword rax, 0
    push rax
addr_1028:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1029:
    pop rbx
    test rbx, rbx
    jz addr_1031
addr_1030:
addr_1030_0:
    mov qword rax, 1
    push rax
addr_1030_1:
    mov qword rax, 0
    push rax
addr_1030_2:
    mov qword rax, 0
    push rax
addr_1030_3:
    push str_19
addr_1030_4:
    mov qword rax, -100
    push rax
addr_1030_5:
    mov qword rax, 257
    push rax
addr_1030_6:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_1030_7:
    pop rax
    push rax
    push rax
addr_1030_8:
    mov qword rax, 0
    push rax
addr_1030_9:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1030_10:
    pop rbx
    test rbx, rbx
    jz addr_1030_12
addr_1030_11:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1030_12
    jmp addr_1018
addr_1030_12:
    mov qword rax, 33
    push rax
addr_1030_13:
    pop rax
    pop rdi
    pop rsi
    syscall
    push rax
addr_1030_14:
    mov qword rax, 0
    push rax
addr_1030_15:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1030_16:
    pop rbx
    test rbx, rbx
    jz addr_1030_18
addr_1030_17:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1030_18
    jmp addr_1018
addr_1030_18:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1030_19:
    mov rax, [args_ptr]
    mov rax, [rax]
    add rax, 2
    shl rax, 3
    mov rbx, [args_ptr]
    add rbx, rax
    push rbx
addr_1030_20:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1030_21:
    pop rax
    push rax
    push rax
addr_1030_22:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1030_23:
    mov qword rax, 59
    push rax
addr_1030_24:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_1030_25:
    pop rax
addr_1030_26:
    pop rax
addr_1030_27:
    pop rax
addr_1030_28:
    mov qword rax, -1
    push rax
addr_1030_29:
    mov rax, 60
    pop rdi
    syscall
addr_1030_30:
addr_1031:
    pop rax
    push rax
    push rax
addr_1032:
    mov qword rax, 0
    push rax
addr_1033:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1034:
    pop rbx
    test rbx, rbx
    jz addr_1036
addr_1035:
addr_1035_0:
    mov qword rax, 0
    push rax
addr_1035_1:
    mov qword rax, 0
    push rax
addr_1035_2:
    push mem+229
addr_1035_3:
    mov qword rax, -1
    push rax
addr_1035_4:
    mov qword rax, 0
    push rax
addr_1035_5:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_1035_6:
    mov qword rax, 0
    push rax
addr_1035_7:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1035_8:
    pop rbx
    test rbx, rbx
    jz addr_1035_10
addr_1035_9:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1035_10
    jmp addr_1018
addr_1035_10:
    pop rax
addr_1035_11:
    pop rax
addr_1035_12:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1035_13:
addr_1036:
    mov qword rax, 0
    push rax
addr_1037:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1038:
    pop rbx
    test rbx, rbx
    jz addr_1040
addr_1039:
addr_1039_0:
    push str_20
addr_1039_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1039_2
    jmp addr_53
addr_1039_2:
addr_1040:
    pop rax
addr_1041:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1042:
addr_1043:
    ; - proc execcmdecho 1 0
addr_1044:
    mov qword rax, 0
    push rax
addr_1045:
    mov qword rax, 1
    push rax
addr_1046:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1047
    jmp addr_976
addr_1047:
    push str_21
addr_1048:
    push str_22
addr_1049:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1050
    jmp addr_950
addr_1050:
    pop rax
    push rax
    push rax
addr_1051:
addr_1052:
    pop rax
    push rax
    push rax
addr_1053:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1054:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1055
    jmp addr_967
addr_1055:
    push addr_362
addr_1056:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1057:
    pop rax
    push rax
    push rax
addr_1058:
    pop rbx
    test rbx, rbx
    jz addr_1060
addr_1059:
addr_1059_0:
    push str_23
addr_1059_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1059_2
    jmp addr_967
addr_1059_2:
addr_1060:
    pop rax
    push rax
    push rax
addr_1061:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1062:
    mov qword rax, 0
    push rax
addr_1063:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1064:
    pop rbx
    test rbx, rbx
    jz addr_1065
    jmp addr_1051
addr_1065:
    pop rax
addr_1066:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1067
    jmp addr_976
addr_1067:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1068
    jmp addr_1025
addr_1068:
    pop rax
addr_1069:
    pop rax
addr_1070:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1071:
addr_1072:
    ; - proc args 1 1
addr_1073:
    pop rax
    push rax
    push rax
addr_1074:
    mov rax, [args_ptr]
    mov rax, [rax]
    push rax
addr_1075:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1076:
    mov qword rax, 0
    push rax
addr_1077:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1078:
    pop rax
    xor rax, 1
    push rax
addr_1079:
    pop rbx
    test rbx, rbx
    jz addr_1081
addr_1080:
addr_1080_0:
    pop rax
    push rax
    push rax
addr_1080_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1080_2
    jmp addr_444
addr_1080_2:
    push str_24
addr_1080_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1080_4
    jmp addr_444
addr_1080_4:
    pop rax
addr_1080_5:
    mov qword rax, -1
    push rax
addr_1080_6:
    mov rax, 60
    pop rdi
    syscall
addr_1080_7:
addr_1081:
    push addr_362
addr_1082:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1083:
    mov rax, [args_ptr]
    add rax, 8
    push rax
addr_1084:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1085:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1086:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1087:
addr_1088:
    ; - proc open 4 1
addr_1089:
    mov qword rax, 257
    push rax
addr_1090:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    pop r10
    syscall
    push rax
addr_1091:
    pop rax
    push rax
    push rax
addr_1092:
    mov qword rax, 0
    push rax
addr_1093:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1094:
    pop rbx
    test rbx, rbx
    jz addr_1096
addr_1095:
addr_1095_0:
    push str_25
addr_1095_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1095_2
    jmp addr_53
addr_1095_2:
    pop rax
addr_1095_3:
    mov qword rax, -1
    push rax
addr_1095_4:
    mov rax, 60
    pop rdi
    syscall
addr_1095_5:
addr_1096:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1097:
addr_1098:
    ; - proc write 3 0
addr_1099:
    mov qword rax, 1
    push rax
addr_1100:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_1101:
    mov qword rax, 0
    push rax
addr_1102:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1103:
    pop rbx
    test rbx, rbx
    jz addr_1105
addr_1104:
addr_1104_0:
    push str_26
addr_1104_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1104_2
    jmp addr_53
addr_1104_2:
    mov qword rax, -1
    push rax
addr_1104_3:
    mov rax, 60
    pop rdi
    syscall
addr_1104_4:
addr_1105:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1106:
addr_1107:
    ; - proc read 3 1
addr_1108:
    mov qword rax, 0
    push rax
addr_1109:
    pop rax
    pop rdi
    pop rsi
    pop rdx
    syscall
    push rax
addr_1110:
    pop rax
    push rax
    push rax
addr_1111:
    mov qword rax, 0
    push rax
addr_1112:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1113:
    pop rbx
    test rbx, rbx
    jz addr_1115
addr_1114:
addr_1114_0:
    push str_27
addr_1114_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1114_2
    jmp addr_53
addr_1114_2:
    pop rax
addr_1114_3:
    mov qword rax, -1
    push rax
addr_1114_4:
    mov rax, 60
    pop rdi
    syscall
addr_1114_5:
addr_1115:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1116:
addr_1117:
    ; - proc close 1 0
addr_1118:
    mov qword rax, 58
    push rax
addr_1119:
    pop rax
    pop rdi
    syscall
    push rax
addr_1120:
    mov qword rax, 0
    push rax
addr_1121:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1122:
    pop rbx
    test rbx, rbx
    jz addr_1124
addr_1123:
addr_1123_0:
    push str_28
addr_1123_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1123_2
    jmp addr_53
addr_1123_2:
    mov qword rax, -1
    push rax
addr_1123_3:
    mov rax, 60
    pop rdi
    syscall
addr_1123_4:
addr_1124:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1125:
addr_1126:
addr_1127:
addr_1128:
addr_1129:
addr_1130:
addr_1131:
addr_1132:
addr_1133:
addr_1134:
addr_1135:
addr_1136:
addr_1137:
addr_1138:
addr_1139:
addr_1140:
addr_1141:
addr_1142:
addr_1143:
addr_1144:
addr_1145:
    ; - proc new 2 1
addr_1146:
    pop rax
    push rax
    push rax
addr_1147:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1148
    jmp addr_792
addr_1148:
    push mem+237
addr_1149:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1150:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1151:
    pop rax
addr_1152:
    push mem+245
addr_1153:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1154:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1155:
    pop rax
addr_1156:
    push mem+237
addr_1157:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1158:
    mov qword rax, 16
    push rax
addr_1159:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1160:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1161:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1162:
    pop rax
addr_1163:
    push mem+237
addr_1164:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1165:
    mov qword rax, 8
    push rax
addr_1166:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1167:
    push mem+245
addr_1168:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1169:
    mov qword rax, 24
    push rax
addr_1170:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1171:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1172:
    pop rax
addr_1173:
    push mem+237
addr_1174:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1175:
    mov qword rax, 0
    push rax
addr_1176:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1177:
    mov qword rax, 0
    push rax
addr_1178:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1179:
    pop rax
addr_1180:
    push mem+237
addr_1181:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1182:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1183:
addr_1184:
    ; - proc setlen 2 1
addr_1185:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1186:
    push mem+237
addr_1187:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1188:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1189:
    pop rax
addr_1190:
    push mem+237
addr_1191:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1192:
    mov qword rax, 0
    push rax
addr_1193:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1194:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1195:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1196:
    pop rax
addr_1197:
    push mem+237
addr_1198:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1199:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1200:
addr_1201:
    ; - proc len 1 2
addr_1202:
    pop rax
    push rax
    push rax
addr_1203:
    mov qword rax, 0
    push rax
addr_1204:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1205:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1206:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1207:
addr_1208:
    ; - proc pushint 2 1
addr_1209:
    push mem+245
addr_1210:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1211:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1212:
    pop rax
addr_1213:
    push mem+237
addr_1214:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1215:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1216:
    pop rax
addr_1217:
    push mem+237
addr_1218:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1219:
    mov qword rax, 16
    push rax
addr_1220:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1221:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1222:
    push mem+237
addr_1223:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1224:
    mov qword rax, 0
    push rax
addr_1225:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1226:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1227:
    mov qword rax, 1
    push rax
addr_1228:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1229:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1230:
    push mem+237
addr_1231:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1232:
    mov qword rax, 8
    push rax
addr_1233:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1234:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1235:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1236:
    pop rbx
    test rbx, rbx
    jz addr_1238
addr_1237:
addr_1237_0:
    push str_29
addr_1237_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1237_2
    jmp addr_53
addr_1237_2:
    mov qword rax, -1
    push rax
addr_1237_3:
    mov rax, 60
    pop rdi
    syscall
addr_1237_4:
addr_1238:
    push mem+237
addr_1239:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1240:
    mov qword rax, 16
    push rax
addr_1241:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1242:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1243:
    push mem+237
addr_1244:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1245:
    mov qword rax, 0
    push rax
addr_1246:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1247:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1248:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1249:
    push mem+237
addr_1250:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1251:
    mov qword rax, 24
    push rax
addr_1252:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1253:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1254:
    push mem+245
addr_1255:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1256:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1257:
    pop rax
addr_1258:
    push mem+237
addr_1259:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1260:
    mov qword rax, 0
    push rax
addr_1261:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1262:
    pop rax
    push rax
    push rax
addr_1263:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1264:
    mov qword rax, 1
    push rax
addr_1265:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1266:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1267:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1268:
addr_1269:
    ; - proc push 2 1
addr_1270:
    push mem+245
addr_1271:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1272:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1273:
    pop rax
addr_1274:
    push mem+237
addr_1275:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1276:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1277:
    pop rax
addr_1278:
    push mem+237
addr_1279:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1280:
    mov qword rax, 16
    push rax
addr_1281:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1282:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1283:
    push mem+237
addr_1284:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1285:
    mov qword rax, 0
    push rax
addr_1286:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1287:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1288:
    mov qword rax, 1
    push rax
addr_1289:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1290:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1291:
    push mem+237
addr_1292:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1293:
    mov qword rax, 8
    push rax
addr_1294:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1295:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1296:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1297:
    pop rbx
    test rbx, rbx
    jz addr_1299
addr_1298:
addr_1298_0:
    push str_30
addr_1298_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1298_2
    jmp addr_53
addr_1298_2:
    mov qword rax, -1
    push rax
addr_1298_3:
    mov rax, 60
    pop rdi
    syscall
addr_1298_4:
addr_1299:
    push mem+237
addr_1300:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1301:
    mov qword rax, 16
    push rax
addr_1302:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1303:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1304:
    push mem+237
addr_1305:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1306:
    mov qword rax, 0
    push rax
addr_1307:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1308:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1309:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1310:
    push mem+237
addr_1311:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1312:
    mov qword rax, 24
    push rax
addr_1313:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1314:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1315:
    push mem+245
addr_1316:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1317:
    push mem+237
addr_1318:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1319:
    mov qword rax, 16
    push rax
addr_1320:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1321:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1322:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1323
    jmp addr_533
addr_1323:
    push mem+237
addr_1324:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1325:
    mov qword rax, 0
    push rax
addr_1326:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1327:
    pop rax
    push rax
    push rax
addr_1328:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1329:
    mov qword rax, 1
    push rax
addr_1330:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1331:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1332:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1333:
addr_1334:
    ; - proc extend 2 1
addr_1335:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1336:
    push mem+237
addr_1337:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1338:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1339:
    pop rax
addr_1340:
    push mem+237
addr_1341:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1342:
    mov qword rax, 0
    push rax
addr_1343:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1344:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1345:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1346:
    push mem+237
addr_1347:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1348:
    mov qword rax, 0
    push rax
addr_1349:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1350:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1351:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1352:
    pop rax
addr_1353:
    push mem+237
addr_1354:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1355:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1356:
addr_1357:
    ; - proc getaddr 2 2
addr_1358:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1359:
    push mem+237
addr_1360:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1361:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1362:
    pop rax
addr_1363:
    pop rax
    push rax
    push rax
addr_1364:
    push mem+237
addr_1365:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1366:
    mov qword rax, 0
    push rax
addr_1367:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1368:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1369:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovg rcx, rdx
    push rcx
addr_1370:
    pop rbx
    test rbx, rbx
    jz addr_1372
addr_1371:
addr_1371_0:
    push str_31
addr_1371_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1371_2
    jmp addr_53
addr_1371_2:
    pop rax
addr_1371_3:
    mov qword rax, -1
    push rax
addr_1371_4:
    mov rax, 60
    pop rdi
    syscall
addr_1371_5:
addr_1372:
    push mem+237
addr_1373:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1374:
    mov qword rax, 16
    push rax
addr_1375:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1376:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1377:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1378:
    push mem+237
addr_1379:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1380:
    mov qword rax, 24
    push rax
addr_1381:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1382:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1383:
    push mem+237
addr_1384:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1385:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1386:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1387:
addr_1388:
    ; - proc print 1 0
addr_1389:
    push mem+237
addr_1390:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1391:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1392:
    pop rax
addr_1393:
    push str_32
addr_1394:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1395
    jmp addr_35
addr_1395:
    push mem+237
addr_1396:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1397:
    mov qword rax, 24
    push rax
addr_1398:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1399:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1400
    jmp addr_35
addr_1400:
    push mem+237
addr_1401:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1402:
    mov qword rax, 0
    push rax
addr_1403:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1404:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1405:
    mov qword rax, 1
    push rax
addr_1406:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1407:
    pop rbx
    test rbx, rbx
    jz addr_1409
addr_1408:
addr_1408_0:
    push str_33
addr_1408_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1408_2
    jmp addr_53
addr_1408_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1408_3:
addr_1409:
    mov qword rax, 0
    push rax
addr_1410:
addr_1411:
    push str_34
addr_1412:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1413
    jmp addr_35
addr_1413:
    mov qword rax, 1
    push rax
addr_1414:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1415:
    pop rax
    push rax
    push rax
addr_1416:
    push mem+237
addr_1417:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1418:
    mov qword rax, 16
    push rax
addr_1419:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1420:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1421:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1422:
    push mem+237
addr_1423:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1424:
    mov qword rax, 24
    push rax
addr_1425:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1426:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1427:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1428
    jmp addr_35
addr_1428:
    pop rax
    push rax
    push rax
addr_1429:
    push mem+237
addr_1430:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1431:
    mov qword rax, 0
    push rax
addr_1432:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1433:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1434:
    mov qword rax, 1
    push rax
addr_1435:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1436:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_1437:
    pop rbx
    test rbx, rbx
    jz addr_1438
    jmp addr_1410
addr_1438:
    pop rax
addr_1439:
    push str_35
addr_1440:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1441
    jmp addr_53
addr_1441:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1442:
addr_1443:
    ; - proc popaddr 1 2
addr_1444:
    push mem+237
addr_1445:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1446:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1447:
    pop rax
addr_1448:
    push mem+237
addr_1449:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1450:
    mov qword rax, 0
    push rax
addr_1451:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1452:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1453:
    mov qword rax, 1
    push rax
addr_1454:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1455:
    push mem+237
addr_1456:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1457:
    mov qword rax, 16
    push rax
addr_1458:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1459:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1460:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1461:
    push mem+237
addr_1462:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1463:
    mov qword rax, 24
    push rax
addr_1464:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1465:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1466:
    push mem+245
addr_1467:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1468:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1469:
    pop rax
addr_1470:
    push mem+237
addr_1471:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1472:
    mov qword rax, 0
    push rax
addr_1473:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1474:
    pop rax
    push rax
    push rax
addr_1475:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1476:
    mov qword rax, 1
    push rax
addr_1477:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1478:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1479:
    pop rax
addr_1480:
    push mem+237
addr_1481:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1482:
    push mem+245
addr_1483:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1484:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1485:
addr_1486:
    ; - proc pop 1 2
addr_1487:
    push mem+237
addr_1488:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1489:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1490:
    pop rax
addr_1491:
    push mem+237
addr_1492:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1493:
    mov qword rax, 0
    push rax
addr_1494:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1495:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1496:
    mov qword rax, 1
    push rax
addr_1497:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1498:
    push mem+237
addr_1499:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1500:
    mov qword rax, 16
    push rax
addr_1501:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1502:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1503:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1504:
    push mem+237
addr_1505:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1506:
    mov qword rax, 24
    push rax
addr_1507:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1508:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1509:
    pop rax
    push rax
    push rax
addr_1510:
    push mem+245
addr_1511:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1512:
    push mem+237
addr_1513:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1514:
    mov qword rax, 16
    push rax
addr_1515:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1516:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1517:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1518
    jmp addr_533
addr_1518:
    push mem+237
addr_1519:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1520:
    mov qword rax, 16
    push rax
addr_1521:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1522:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1523:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1524
    jmp addr_596
addr_1524:
    push mem+237
addr_1525:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1526:
    mov qword rax, 0
    push rax
addr_1527:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1528:
    pop rax
    push rax
    push rax
addr_1529:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1530:
    mov qword rax, 1
    push rax
addr_1531:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1532:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1533:
    pop rax
addr_1534:
    push mem+237
addr_1535:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1536:
    push mem+245
addr_1537:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1538:
addr_1539:
    ; - proc free 1 0
addr_1540:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1541
    jmp addr_805
addr_1541:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1542:
addr_1543:
addr_1544:
addr_1545:
addr_1546:
addr_1547:
    ; - proc new 1 1
addr_1548:
    mov qword rax, 8
    push rax
addr_1549:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1550:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1551
    jmp addr_792
addr_1551:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1552:
addr_1553:
    ; - proc free 1 0
addr_1554:
    pop rax
    push rax
    push rax
addr_1555:
    mov qword rax, 0
    push rax
addr_1556:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1557:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1558:
    pop rax
    push rax
    push rax
addr_1559:
    mov qword rax, 0
    push rax
addr_1560:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1561:
    pop rbx
    test rbx, rbx
    jz addr_1563
addr_1562:
addr_1562_0:
    pop rax
    push rax
    push rax
addr_1562_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1562_2
    jmp addr_1554
addr_1562_2:
addr_1563:
    pop rax
addr_1564:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1565
    jmp addr_805
addr_1565:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1566:
addr_1567:
    ; - proc last 1 1
addr_1568:
    pop rax
    push rax
    push rax
addr_1569:
    mov qword rax, 0
    push rax
addr_1570:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1571:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1572:
    mov qword rax, 0
    push rax
addr_1573:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1574:
    pop rbx
    test rbx, rbx
    jz addr_1576
addr_1575:
addr_1575_0:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1575_1:
addr_1576:
    mov qword rax, 0
    push rax
addr_1577:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1578:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1579:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1580
    jmp addr_1568
addr_1580:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1581:
addr_1582:
    ; - proc append 2 1
addr_1583:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1584:
    mov qword rax, 0
    push rax
addr_1585:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1586:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1587:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1588:
    pop rax
addr_1589:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1590:
addr_1591:
    ; - proc print 2 1
addr_1592:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1593:
    push addr_976
addr_1594:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1595:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1596:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1597
    pop rax
    jmp rax
addr_1597:
    pop rax
addr_1598:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1599:
    mov qword rax, 0
    push rax
addr_1600:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1601:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1602:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1603:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1604:
    mov qword rax, 0
    push rax
addr_1605:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1606:
    pop rbx
    test rbx, rbx
    jz addr_1608
addr_1607:
addr_1607_0:
    push str_36
addr_1607_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1607_2
    jmp addr_35
addr_1607_2:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1607_3
    jmp addr_1592
addr_1607_3:
    mov qword rax, 0
    push rax
addr_1607_4:
addr_1608:
    pop rax
addr_1609:
    pop rax
addr_1610:
    pop rax
addr_1611:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1612:
addr_1613:
addr_1614:
addr_1615:
addr_1616:
addr_1617:
addr_1618:
    ; - proc new 1 1
addr_1619:
    mov qword rax, 16
    push rax
addr_1620:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1621
    jmp addr_792
addr_1621:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1622:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1623:
    mov qword rax, 0
    push rax
addr_1624:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1625:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1626:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1627:
    pop rax
addr_1628:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1629:
    pop rax
addr_1630:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1631:
addr_1632:
    ; - proc free 1 0
addr_1633:
    pop rax
    push rax
    push rax
addr_1634:
    mov qword rax, 8
    push rax
addr_1635:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1636:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1637:
    pop rax
    push rax
    push rax
addr_1638:
    mov qword rax, 0
    push rax
addr_1639:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1640:
    pop rbx
    test rbx, rbx
    jz addr_1642
addr_1641:
addr_1641_0:
    pop rax
    push rax
    push rax
addr_1641_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1641_2
    jmp addr_1554
addr_1641_2:
addr_1642:
    pop rax
addr_1643:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1644
    jmp addr_805
addr_1644:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1645:
addr_1646:
    ; - proc last 1 2
addr_1647:
    pop rax
    push rax
    push rax
addr_1648:
    mov qword rax, 8
    push rax
addr_1649:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1650:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1651:
    mov qword rax, 0
    push rax
addr_1652:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1653:
    pop rbx
    test rbx, rbx
    jz addr_1655
addr_1654:
addr_1654_0:
    mov qword rax, 0
    push rax
addr_1654_1:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1654_2:
addr_1655:
    pop rax
    push rax
    push rax
addr_1656:
    mov qword rax, 8
    push rax
addr_1657:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1658:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1659:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1660
    jmp addr_1568
addr_1660:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1661:
addr_1662:
    ; - proc len 1 1
addr_1663:
    pop rax
    push rax
    push rax
addr_1664:
    mov qword rax, 8
    push rax
addr_1665:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1666:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1667:
    mov qword rax, 0
    push rax
addr_1668:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1669:
    pop rbx
    test rbx, rbx
    jz addr_1671
addr_1670:
addr_1670_0:
    pop rax
addr_1670_1:
    mov qword rax, 0
    push rax
addr_1670_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1670_3:
addr_1671:
    mov qword rax, 8
    push rax
addr_1672:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1673:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1674:
    mov qword rax, 0
    push rax
addr_1675:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1676:
addr_1677:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1678:
    mov qword rax, 1
    push rax
addr_1679:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1680:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1681:
    mov qword rax, 0
    push rax
addr_1682:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1683:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1684:
    pop rax
    push rax
    push rax
addr_1685:
    mov qword rax, 0
    push rax
addr_1686:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1687:
    pop rbx
    test rbx, rbx
    jz addr_1688
    jmp addr_1676
addr_1688:
    pop rax
addr_1689:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1690:
addr_1691:
    ; - proc append 2 1
addr_1692:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1693:
    push mem+277
addr_1694:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1695:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1696:
    pop rax
addr_1697:
    push mem+277
addr_1698:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1699:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1700
    jmp addr_1647
addr_1700:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1701:
    pop rax
addr_1702:
    mov qword rax, 0
    push rax
addr_1703:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1704:
    pop rbx
    test rbx, rbx
    jz addr_1706
addr_1705:
addr_1705_0:
    push mem+277
addr_1705_1:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1705_2:
    mov qword rax, 0
    push rax
addr_1705_3:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1705_4:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1705_5:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1705_6
    jmp addr_1548
addr_1705_6:
    push mem+277
addr_1705_7:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1705_8:
    mov qword rax, 8
    push rax
addr_1705_9:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1705_10:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1705_11:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1705_12:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1705_13:
    push addr_976
addr_1705_14:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1705_15:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1705_16:
    push mem+277
addr_1705_17:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1705_18:
    mov qword rax, 0
    push rax
addr_1705_19:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1705_20:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1705_21:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1705_22
    jmp addr_533
addr_1705_22:
    push mem+277
addr_1705_23:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1705_24:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1705_25:
addr_1706:
    push mem+277
addr_1707:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1708:
    mov qword rax, 0
    push rax
addr_1709:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1710:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1711:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1712
    jmp addr_1548
addr_1712:
    push mem+277
addr_1713:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1714:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1715
    jmp addr_1647
addr_1715:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1716:
    pop rax
addr_1717:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1718:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1719
    jmp addr_1583
addr_1719:
    pop rax
addr_1720:
    push mem+277
addr_1721:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1722:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1723
    jmp addr_1647
addr_1723:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1724:
    pop rax
addr_1725:
    push addr_976
addr_1726:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1727:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1728:
    push mem+277
addr_1729:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1730:
    mov qword rax, 0
    push rax
addr_1731:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1732:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1733:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1734
    jmp addr_533
addr_1734:
    push mem+277
addr_1735:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1736:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1737:
addr_1738:
    ; - proc print 2 1
addr_1739:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1740:
    mov qword rax, 8
    push rax
addr_1741:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1742:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1743:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1744:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1745:
    mov qword rax, 0
    push rax
addr_1746:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1747:
    pop rbx
    test rbx, rbx
    jz addr_1749
addr_1748:
addr_1748_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1748_1
    jmp addr_1663
addr_1748_1:
    mov qword rax, 0
    push rax
addr_1748_2:
addr_1749:
    pop rax
addr_1750:
    pop rax
addr_1751:
    pop rax
addr_1752:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1753:
addr_1754:
addr_1755:
addr_1756:
addr_1757:
addr_1758:
    ; - proc get 2 1
addr_1759:
    push mem+285
addr_1760:
    mov qword rax, 7
    push rax
addr_1761:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_1762:
    pop rax
addr_1763:
addr_1764:
    mov qword rax, 1
    push rax
addr_1765:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1766:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1767:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1768:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1769:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1770:
    push mem+285
addr_1771:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1772:
    mov qword rax, 31
    push rax
addr_1773:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1774:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1775:
    push mem+285
addr_1776:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1777:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_1778:
    pop rax
addr_1779:
    pop rax
    push rax
    push rax
addr_1780:
    mov qword rax, 1
    push rax
addr_1781:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1782:
    pop rbx
    test rbx, rbx
    jz addr_1783
    jmp addr_1763
addr_1783:
    pop rax
addr_1784:
    pop rax
addr_1785:
    push mem+285
addr_1786:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_1787:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1788:
addr_1789:
addr_1790:
addr_1791:
addr_1792:
addr_1793:
addr_1794:
addr_1795:
addr_1796:
addr_1797:
addr_1798:
    ; - proc new 3 1
addr_1799:
    push mem+302
addr_1800:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1801:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1802:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1803:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1804:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1805:
    push mem+294
addr_1806:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1807:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1808:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1809:
    push addr_362
addr_1810:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1811:
    mov qword rax, 3
    push rax
addr_1812:
    mov qword rax, 8
    push rax
addr_1813:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1814:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1815:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1816
    jmp addr_792
addr_1816:
    push mem+286
addr_1817:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1818:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1819:
    pop rax
addr_1820:
    push mem+286
addr_1821:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1822:
    mov qword rax, 0
    push rax
addr_1823:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1824:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1825:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1826:
    pop rax
addr_1827:
    push mem+286
addr_1828:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1829:
    mov qword rax, 8
    push rax
addr_1830:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1831:
    push mem+302
addr_1832:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1833:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1834:
    pop rax
addr_1835:
    push mem+286
addr_1836:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1837:
    mov qword rax, 16
    push rax
addr_1838:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1839:
    push mem+294
addr_1840:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1841:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1842:
    pop rax
addr_1843:
    push mem+286
addr_1844:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1845:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1846:
addr_1847:
    ; - proc valsize 0 1
addr_1848:
    push mem+286
addr_1849:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1850:
    mov qword rax, 0
    push rax
addr_1851:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1852:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1853:
    push mem+286
addr_1854:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1855:
    mov qword rax, 8
    push rax
addr_1856:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1857:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1858:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_1859:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1860:
addr_1861:
    ; - proc put 3 1
addr_1862:
    push mem+302
addr_1863:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1864:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1865:
    pop rax
addr_1866:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1867:
    push mem+286
addr_1868:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1869:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1870:
    pop rax
addr_1871:
    push mem+302
addr_1872:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1873:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1874:
    push mem+286
addr_1875:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1876:
    mov qword rax, 0
    push rax
addr_1877:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1878:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1879:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1880
    jmp addr_792
addr_1880:
    push mem+294
addr_1881:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1882:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1883:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1884:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1885:
    push mem+286
addr_1886:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1887:
    mov qword rax, 8
    push rax
addr_1888:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1889:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1890:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1891
    jmp addr_533
addr_1891:
    push mem+294
addr_1892:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1893:
    push mem+286
addr_1894:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1895:
    mov qword rax, 8
    push rax
addr_1896:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1897:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1898:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1899:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1900:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1901
    jmp addr_1848
addr_1901:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1902
    jmp addr_533
addr_1902:
    push mem+294
addr_1903:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1904:
    push mem+286
addr_1905:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1906:
    mov qword rax, 8
    push rax
addr_1907:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1908:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1909:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1910
    jmp addr_1759
addr_1910:
    push mem+286
addr_1911:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1912:
    mov qword rax, 16
    push rax
addr_1913:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1914:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1915:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_1916:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1917:
    pop rax
addr_1918:
    push addr_362
addr_1919:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1920:
    push mem+286
addr_1921:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1922:
    mov qword rax, 24
    push rax
addr_1923:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1924:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1925:
    pop rax
    push rax
    push rax
addr_1926:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1927:
    mov qword rax, 0
    push rax
addr_1928:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_1929:
    pop rbx
    test rbx, rbx
    jz addr_1931
addr_1930:
addr_1930_0:
    pop rax
    push rax
    push rax
addr_1930_1:
    push mem+286
addr_1930_2:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1930_3:
    mov qword rax, 0
    push rax
addr_1930_4:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1930_5:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1930_6:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1930_7
    jmp addr_1619
addr_1930_7:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1930_8:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1930_9:
    push mem+294
addr_1930_10:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1930_11:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1930_12
    jmp addr_1692
addr_1930_12:
    pop rax
addr_1930_13:
    pop rax
addr_1930_14:
    push mem+286
addr_1930_15:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1930_16:
    push mem+294
addr_1930_17:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1930_18:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1930_19
    jmp addr_805
addr_1930_19:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1930_20:
addr_1931:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1932:
    pop rax
    push rax
    push rax
addr_1933:
    mov qword rax, 8
    push rax
addr_1934:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1935:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1936:
addr_1937:
    push mem+294
addr_1938:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1939:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1940:
    push addr_976
addr_1941:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1942:
    push mem+286
addr_1943:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1944:
    mov qword rax, 8
    push rax
addr_1945:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1946:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1947:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1948
    jmp addr_566
addr_1948:
    pop rbx
    test rbx, rbx
    jz addr_1950
addr_1949:
addr_1949_0:
    push mem+294
addr_1949_1:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1949_2:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_1949_3:
    push addr_976
addr_1949_4:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1949_5:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1949_6:
    push mem+286
addr_1949_7:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1949_8:
    mov qword rax, 0
    push rax
addr_1949_9:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1949_10:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1949_11:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1949_12
    jmp addr_533
addr_1949_12:
    pop rax
addr_1949_13:
    pop rax
addr_1949_14:
    push mem+294
addr_1949_15:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1949_16:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1949_17
    jmp addr_805
addr_1949_17:
    push mem+286
addr_1949_18:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_1949_19:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1949_20:
addr_1950:
    mov qword rax, 0
    push rax
addr_1951:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_1952:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1953:
    pop rax
    push rax
    push rax
addr_1954:
    mov qword rax, 0
    push rax
addr_1955:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_1956:
    pop rbx
    test rbx, rbx
    jz addr_1957
    jmp addr_1936
addr_1957:
    pop rax
addr_1958:
    push mem+294
addr_1959:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1960:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1961
    jmp addr_1692
addr_1961:
    pop rax
addr_1962:
    push mem+294
addr_1963:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1964:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1965
    jmp addr_805
addr_1965:
    push mem+286
addr_1966:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1967:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1968:
addr_1969:
    ; - proc eprint 1 1
addr_1970:
    pop rax
    push rax
    push rax
addr_1971:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1972
    jmp addr_444
addr_1972:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1973:
addr_1974:
addr_1975:
    ; - proc comma 0 0
addr_1976:
    push str_37
addr_1977:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1978
    jmp addr_35
addr_1978:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_1979:
addr_1980:
    ; - proc print 1 0
addr_1981:
    push mem+310
addr_1982:
    mov qword rax, 0
    push rax
addr_1983:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_1984:
    pop rax
addr_1985:
    push str_38
addr_1986:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_1987
    jmp addr_35
addr_1987:
    push mem+286
addr_1988:
    pop rax
    pop rbx
    push rax
    push rbx
addr_1989:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_1990:
    pop rax
addr_1991:
    mov qword rax, 0
    push rax
addr_1992:
addr_1993:
    pop rax
    push rax
    push rax
addr_1994:
    push addr_362
addr_1995:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_1996:
    push mem+286
addr_1997:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_1998:
    mov qword rax, 24
    push rax
addr_1999:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2000:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2001:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2002:
    pop rax
    push rax
    push rax
addr_2003:
    mov qword rax, 0
    push rax
addr_2004:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2005:
    pop rbx
    test rbx, rbx
    jz addr_2007
addr_2006:
addr_2006_0:
    push mem+310
addr_2006_1:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_2006_2:
    pop rbx
    test rbx, rbx
    jz addr_2006_4
addr_2006_3:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2006_4
    jmp addr_1976
addr_2006_4:
    push mem+310
addr_2006_5:
    mov qword rax, 1
    push rax
addr_2006_6:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_2006_7:
    pop rax
addr_2006_8:
    pop rax
    push rax
    push rax
addr_2006_9:
    push addr_1970
addr_2006_10:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2006_11
    jmp addr_1739
addr_2006_11:
    pop rax
addr_2006_12:
addr_2007:
    pop rax
addr_2008:
    mov qword rax, 1
    push rax
addr_2009:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2010:
    pop rax
    push rax
    push rax
addr_2011:
    push mem+286
addr_2012:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2013:
    mov qword rax, 16
    push rax
addr_2014:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2015:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2016:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_2017:
    pop rbx
    test rbx, rbx
    jz addr_2018
    jmp addr_1992
addr_2018:
    pop rax
addr_2019:
    push str_39
addr_2020:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2021
    jmp addr_35
addr_2021:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2022:
addr_2023:
    ; - proc free 1 0
addr_2024:
    push mem+286
addr_2025:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2026:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2027:
    pop rax
addr_2028:
    mov qword rax, 0
    push rax
addr_2029:
addr_2030:
    pop rax
    push rax
    push rax
addr_2031:
    push addr_362
addr_2032:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_2033:
    push mem+286
addr_2034:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2035:
    mov qword rax, 24
    push rax
addr_2036:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2037:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2038:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2039:
    pop rax
    push rax
    push rax
addr_2040:
    mov qword rax, 0
    push rax
addr_2041:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2042:
    pop rbx
    test rbx, rbx
    jz addr_2044
addr_2043:
addr_2043_0:
    pop rax
    push rax
    push rax
addr_2043_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2043_2
    jmp addr_1633
addr_2043_2:
addr_2044:
    pop rax
addr_2045:
    mov qword rax, 1
    push rax
addr_2046:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2047:
    pop rax
    push rax
    push rax
addr_2048:
    push mem+286
addr_2049:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2050:
    mov qword rax, 16
    push rax
addr_2051:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2052:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2053:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_2054:
    pop rbx
    test rbx, rbx
    jz addr_2055
    jmp addr_2029
addr_2055:
    pop rax
addr_2056:
    push mem+286
addr_2057:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2058:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2059
    jmp addr_805
addr_2059:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2060:
addr_2061:
    ; - proc get 2 2
addr_2062:
    push mem+294
addr_2063:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2064:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2065:
    pop rax
addr_2066:
    push mem+286
addr_2067:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2068:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2069:
    pop rax
addr_2070:
    push mem+294
addr_2071:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2072:
    push mem+286
addr_2073:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2074:
    mov qword rax, 8
    push rax
addr_2075:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2076:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2077:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2078
    jmp addr_1759
addr_2078:
    push mem+286
addr_2079:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2080:
    mov qword rax, 16
    push rax
addr_2081:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2082:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2083:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_2084:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2085:
    pop rax
addr_2086:
    push addr_362
addr_2087:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_2088:
    push mem+286
addr_2089:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2090:
    mov qword rax, 24
    push rax
addr_2091:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2092:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2093:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2094:
    pop rax
    push rax
    push rax
addr_2095:
    mov qword rax, 0
    push rax
addr_2096:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2097:
    pop rbx
    test rbx, rbx
    jz addr_2099
addr_2098:
addr_2098_0:
    pop rax
addr_2098_1:
    mov qword rax, 0
    push rax
addr_2098_2:
    push mem+286
addr_2098_3:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_2098_4:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2098_5:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2098_6:
addr_2099:
    mov qword rax, 8
    push rax
addr_2100:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2101:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2102:
addr_2103:
    push mem+294
addr_2104:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2105:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2106:
    push addr_976
addr_2107:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2108:
    push mem+286
addr_2109:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2110:
    mov qword rax, 8
    push rax
addr_2111:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2112:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2113:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2114
    jmp addr_566
addr_2114:
    pop rbx
    test rbx, rbx
    jz addr_2116
addr_2115:
addr_2115_0:
    push addr_976
addr_2115_1:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2115_2:
    push mem+286
addr_2115_3:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_2115_4:
    mov qword rax, 8
    push rax
addr_2115_5:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2115_6:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_2115_7:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2115_8:
    push mem+286
addr_2115_9:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_2115_10:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2115_11:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2115_12:
addr_2116:
    mov qword rax, 0
    push rax
addr_2117:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2118:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2119:
    pop rax
    push rax
    push rax
addr_2120:
    mov qword rax, 0
    push rax
addr_2121:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2122:
    pop rbx
    test rbx, rbx
    jz addr_2123
    jmp addr_2102
addr_2123:
    pop rax
addr_2124:
    mov qword rax, 0
    push rax
addr_2125:
    push mem+286
addr_2126:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2127:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2128:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2129:
addr_2130:
    ; - proc in 2 2
addr_2131:
    push mem+294
addr_2132:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2133:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2134:
    pop rax
addr_2135:
    push mem+286
addr_2136:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2137:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2138:
    pop rax
addr_2139:
    push mem+294
addr_2140:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2141:
    push mem+286
addr_2142:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2143:
    mov qword rax, 8
    push rax
addr_2144:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2145:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2146:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2147
    jmp addr_1759
addr_2147:
    push mem+286
addr_2148:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2149:
    mov qword rax, 16
    push rax
addr_2150:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2151:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2152:
    xor rdx, rdx
    pop rbx
    pop rax
    idiv rbx
    push rax
    push rdx
addr_2153:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2154:
    pop rax
addr_2155:
    push addr_362
addr_2156:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_2157:
    push mem+286
addr_2158:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2159:
    mov qword rax, 24
    push rax
addr_2160:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2161:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2162:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2163:
    pop rax
    push rax
    push rax
addr_2164:
    mov qword rax, 0
    push rax
addr_2165:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2166:
    pop rbx
    test rbx, rbx
    jz addr_2168
addr_2167:
addr_2167_0:
    pop rax
addr_2167_1:
    mov qword rax, 0
    push rax
addr_2167_2:
    push mem+286
addr_2167_3:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_2167_4:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2167_5:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2167_6:
addr_2168:
    mov qword rax, 8
    push rax
addr_2169:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2170:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2171:
addr_2172:
    push mem+294
addr_2173:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2174:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2175:
    push addr_976
addr_2176:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2177:
    push mem+286
addr_2178:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2179:
    mov qword rax, 8
    push rax
addr_2180:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2181:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2182:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2183
    jmp addr_566
addr_2183:
    pop rbx
    test rbx, rbx
    jz addr_2185
addr_2184:
addr_2184_0:
    pop rax
addr_2184_1:
    mov qword rax, 1
    push rax
addr_2184_2:
    push mem+286
addr_2184_3:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_2184_4:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2184_5:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2184_6:
addr_2185:
    mov qword rax, 0
    push rax
addr_2186:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2187:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2188:
    pop rax
    push rax
    push rax
addr_2189:
    mov qword rax, 0
    push rax
addr_2190:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2191:
    pop rbx
    test rbx, rbx
    jz addr_2192
    jmp addr_2171
addr_2192:
    pop rax
addr_2193:
    mov qword rax, 0
    push rax
addr_2194:
    push mem+286
addr_2195:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2196:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2197:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2198:
addr_2199:
    ; - proc len 1 2
addr_2200:
    push mem+286
addr_2201:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2202:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2203:
    pop rax
addr_2204:
    push mem+302
addr_2205:
    mov qword rax, 0
    push rax
addr_2206:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2207:
    pop rax
addr_2208:
    mov qword rax, 0
    push rax
addr_2209:
addr_2210:
    pop rax
    push rax
    push rax
addr_2211:
    push addr_362
addr_2212:
    pop rax
    pop rbx
    imul rax, rbx
    push rax
addr_2213:
    push mem+286
addr_2214:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2215:
    mov qword rax, 24
    push rax
addr_2216:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2217:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2218:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2219:
    pop rax
    push rax
    push rax
addr_2220:
    mov qword rax, 0
    push rax
addr_2221:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2222:
    pop rbx
    test rbx, rbx
    jz addr_2224
addr_2223:
addr_2223_0:
    pop rax
    push rax
    push rax
addr_2223_1:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2223_2
    jmp addr_1663
addr_2223_2:
    push mem+302
addr_2223_3:
   pop rax
   xor rbx, rbx
   mov rbx, [rax]
   push rbx
addr_2223_4:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2223_5:
    push mem+302
addr_2223_6:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2223_7:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2223_8:
    pop rax
addr_2223_9:
addr_2224:
    pop rax
addr_2225:
    mov qword rax, 1
    push rax
addr_2226:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2227:
    pop rax
    push rax
    push rax
addr_2228:
    push mem+286
addr_2229:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2230:
    mov qword rax, 16
    push rax
addr_2231:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2232:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2233:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_2234:
    pop rbx
    test rbx, rbx
    jz addr_2235
    jmp addr_2209
addr_2235:
    pop rax
addr_2236:
    push mem+286
addr_2237:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2238:
    push mem+302
addr_2239:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2240:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2241:
addr_2242:
addr_2243:
addr_2244:
addr_2245:
    ; - proc version 0 1
addr_2246:
    push str_40
addr_2247:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2248:
addr_2249:
    ; - enum
addr_2250:
    ; - enum
addr_2251:
    ; - enum
addr_2252:
addr_2253:
addr_2254:
addr_2255:
addr_2256:
addr_2257:
addr_2258:
addr_2259:
addr_2260:
addr_2261:
addr_2262:
addr_2263:
addr_2264:
addr_2265:
addr_2266:
addr_2267:
addr_2268:
addr_2269:
addr_2270:
addr_2271:
addr_2272:
addr_2273:
addr_2274:
addr_2275:
addr_2276:
addr_2277:
addr_2278:
addr_2279:
addr_2280:
addr_2281:
addr_2282:
addr_2283:
addr_2284:
addr_2285:
addr_2286:
addr_2287:
addr_2288:
addr_2289:
addr_2290:
addr_2291:
addr_2292:
addr_2293:
addr_2294:
addr_2295:
addr_2296:
addr_2297:
addr_2298:
addr_2299:
addr_2300:
addr_2301:
addr_2302:
addr_2303:
addr_2304:
    ; - proc getescape 1 1
addr_2305:
    pop rax
    push rax
    push rax
addr_2306:
    mov qword rax, 101
    push rax
addr_2307:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2308:
    pop rbx
    test rbx, rbx
    jz addr_2310
addr_2309:
addr_2309_0:
    pop rax
addr_2309_1:
    mov qword rax, 27
    push rax
addr_2309_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2309_3:
addr_2310:
    pop rax
    push rax
    push rax
addr_2311:
    mov qword rax, 114
    push rax
addr_2312:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2313:
    pop rbx
    test rbx, rbx
    jz addr_2315
addr_2314:
addr_2314_0:
    pop rax
addr_2314_1:
    mov qword rax, 13
    push rax
addr_2314_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2314_3:
addr_2315:
    pop rax
    push rax
    push rax
addr_2316:
    mov qword rax, 110
    push rax
addr_2317:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2318:
    pop rbx
    test rbx, rbx
    jz addr_2320
addr_2319:
addr_2319_0:
    pop rax
addr_2319_1:
    mov qword rax, 10
    push rax
addr_2319_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2319_3:
addr_2320:
    pop rax
    push rax
    push rax
addr_2321:
    mov qword rax, 116
    push rax
addr_2322:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2323:
    pop rbx
    test rbx, rbx
    jz addr_2325
addr_2324:
addr_2324_0:
    pop rax
addr_2324_1:
    mov qword rax, 9
    push rax
addr_2324_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2324_3:
addr_2325:
    pop rax
    push rax
    push rax
addr_2326:
    mov qword rax, 48
    push rax
addr_2327:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2328:
    pop rbx
    test rbx, rbx
    jz addr_2330
addr_2329:
addr_2329_0:
    pop rax
addr_2329_1:
    mov qword rax, 0
    push rax
addr_2329_2:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2329_3:
addr_2330:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2331:
addr_2332:
    ; - proc setupvar 0 0
addr_2333:
    push mem+7053
addr_2334:
    mov qword rax, 12
    push rax
addr_2335:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2336:
    pop rax
addr_2337:
    push mem+4861
addr_2338:
    pop rax
    xor rbx, rbx
    mov bl, [rax]
    push rbx
addr_2339:
    mov qword rax, 0
    push rax
addr_2340:
    mov rcx, 0
    mov rdx, 1
    pop rax
    pop rbx
    cmp rax, rbx
    cmove rcx, rdx
    push rcx
addr_2341:
    pop rbx
    test rbx, rbx
    jz addr_2343
addr_2342:
addr_2342_0:
    push mem+7053
addr_2342_1:
    mov qword rax, 14
    push rax
addr_2342_2:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2342_3:
    pop rax
addr_2342_4:
addr_2343:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2344:
addr_2345:
    ; - proc lineappend 0 0
addr_2346:
    push str_41
addr_2347:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2348
    jmp addr_967
addr_2348:
    push mem+7111
addr_2349:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2350:
    mov qword rax, 16
    push rax
addr_2351:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2352:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2353
    jmp addr_967
addr_2353:
    push str_42
addr_2354:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2355
    jmp addr_967
addr_2355:
    push mem+7111
addr_2356:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2357:
    mov qword rax, 0
    push rax
addr_2358:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2359:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2360:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2361
    jmp addr_381
addr_2361:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2362
    jmp addr_967
addr_2362:
    push str_43
addr_2363:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2364
    jmp addr_967
addr_2364:
    push mem+7111
addr_2365:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2366:
    mov qword rax, 8
    push rax
addr_2367:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2368:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2369:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2370
    jmp addr_381
addr_2370:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2371
    jmp addr_967
addr_2371:
    push str_44
addr_2372:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2373
    jmp addr_967
addr_2373:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2374:
addr_2375:
    ; - proc openinput 1 1
addr_2376:
    push mem+7111
addr_2377:
    mov qword rax, 80
    push rax
addr_2378:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2379
    jmp addr_792
addr_2379:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2380:
    pop rax
addr_2381:
    push mem+7111
addr_2382:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2383:
    mov qword rax, 16
    push rax
addr_2384:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2385:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2386:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2387
    jmp addr_242
addr_2387:
    pop rax
addr_2388:
    pop rax
addr_2389:
    push mem+4509
addr_2390:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2391:
    pop rax
    push rax
    push rax
addr_2392:
    mov qword rax, 0
    push rax
addr_2393:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2394:
    pop rbx
    test rbx, rbx
    jz addr_2396
addr_2395:
addr_2395_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2395_1
    jmp addr_1118
addr_2395_1:
    mov qword rax, 0
    push rax
addr_2395_2:
addr_2396:
    pop rax
addr_2397:
    push mem+4509
addr_2398:
    mov qword rax, 0
    push rax
addr_2399:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2400:
    pop rax
addr_2401:
    push mem+335
addr_2402:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2403:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2404:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2405
    jmp addr_2131
addr_2405:
    pop rbx
    test rbx, rbx
    jz addr_2407
addr_2406:
addr_2406_0:
    pop rax
addr_2406_1:
    pop rax
addr_2406_2:
    mov qword rax, 0
    push rax
addr_2406_3:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2406_4:
addr_2407:
    pop rax
addr_2408:
    push mem+351
addr_2409:
    mov qword rax, 1
    push rax
addr_2410:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2411:
    pop rax
addr_2412:
    push mem+335
addr_2413:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2414:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2415:
    push mem+351
addr_2416:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2417
    jmp addr_1862
addr_2417:
    pop rax
addr_2418:
    push mem+4525
addr_2419:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2420:
    pop rax
    xor rax, 1
    push rax
addr_2421:
    pop rbx
    test rbx, rbx
    jz addr_2423
addr_2422:
addr_2422_0:
    mov qword rax, 0
    push rax
addr_2422_1:
    mov qword rax, 1
    push rax
addr_2422_2:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2422_3
    jmp addr_976
addr_2422_3:
    push str_45
addr_2422_4:
    push str_46
addr_2422_5:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2422_6
    jmp addr_950
addr_2422_6:
    pop rax
    push rax
    push rax
addr_2422_7:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2422_8
    jmp addr_967
addr_2422_8:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2422_9
    jmp addr_976
addr_2422_9:
addr_2423:
    mov qword rax, 0
    push rax
addr_2424:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2425:
    mov qword rax, 0
    push rax
addr_2426:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2427:
    mov qword rax, -100
    push rax
addr_2428:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2429
    jmp addr_1089
addr_2429:
    push mem+4509
addr_2430:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2431:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2432:
    pop rax
addr_2433:
    mov qword rax, 1
    push rax
addr_2434:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2435:
addr_2436:
    ; - proc getopfromname 1 1
addr_2437:
    mov qword rax, 0
    push rax
addr_2438:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2439:
    push str_47
addr_2440:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2441
    jmp addr_58
addr_2441:
    pop rbx
    test rbx, rbx
    jz addr_2443
addr_2442:
addr_2442_0:
    pop rax
addr_2442_1:
    mov qword rax, 52
    push rax
addr_2442_2:
addr_2443:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2444:
    push str_48
addr_2445:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2446
    jmp addr_58
addr_2446:
    pop rbx
    test rbx, rbx
    jz addr_2448
addr_2447:
addr_2447_0:
    pop rax
addr_2447_1:
    mov qword rax, 53
    push rax
addr_2447_2:
addr_2448:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2449:
    push str_49
addr_2450:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2451
    jmp addr_58
addr_2451:
    pop rbx
    test rbx, rbx
    jz addr_2453
addr_2452:
addr_2452_0:
    pop rax
addr_2452_1:
    mov qword rax, 54
    push rax
addr_2452_2:
addr_2453:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2454:
    push str_50
addr_2455:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2456
    jmp addr_58
addr_2456:
    pop rbx
    test rbx, rbx
    jz addr_2458
addr_2457:
addr_2457_0:
    pop rax
addr_2457_1:
    mov qword rax, 56
    push rax
addr_2457_2:
addr_2458:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2459:
    push str_51
addr_2460:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2461
    jmp addr_58
addr_2461:
    pop rbx
    test rbx, rbx
    jz addr_2463
addr_2462:
addr_2462_0:
    pop rax
addr_2462_1:
    mov qword rax, 46
    push rax
addr_2462_2:
addr_2463:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2464:
    push str_52
addr_2465:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2466
    jmp addr_58
addr_2466:
    pop rbx
    test rbx, rbx
    jz addr_2468
addr_2467:
addr_2467_0:
    pop rax
addr_2467_1:
    mov qword rax, 50
    push rax
addr_2467_2:
addr_2468:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2469:
    push str_53
addr_2470:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2471
    jmp addr_58
addr_2471:
    pop rbx
    test rbx, rbx
    jz addr_2473
addr_2472:
addr_2472_0:
    pop rax
addr_2472_1:
    mov qword rax, 55
    push rax
addr_2472_2:
addr_2473:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2474:
    push str_54
addr_2475:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2476
    jmp addr_58
addr_2476:
    pop rbx
    test rbx, rbx
    jz addr_2478
addr_2477:
addr_2477_0:
    pop rax
addr_2477_1:
    mov qword rax, 47
    push rax
addr_2477_2:
addr_2478:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2479:
    push str_55
addr_2480:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2481
    jmp addr_58
addr_2481:
    pop rbx
    test rbx, rbx
    jz addr_2483
addr_2482:
addr_2482_0:
    pop rax
addr_2482_1:
    mov qword rax, 49
    push rax
addr_2482_2:
addr_2483:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2484:
    push str_56
addr_2485:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2486
    jmp addr_58
addr_2486:
    pop rbx
    test rbx, rbx
    jz addr_2488
addr_2487:
addr_2487_0:
    pop rax
addr_2487_1:
    mov qword rax, 48
    push rax
addr_2487_2:
addr_2488:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2489:
    push str_57
addr_2490:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2491
    jmp addr_58
addr_2491:
    pop rbx
    test rbx, rbx
    jz addr_2493
addr_2492:
addr_2492_0:
    pop rax
addr_2492_1:
    mov qword rax, 51
    push rax
addr_2492_2:
addr_2493:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2494:
    push str_58
addr_2495:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2496
    jmp addr_58
addr_2496:
    pop rbx
    test rbx, rbx
    jz addr_2498
addr_2497:
addr_2497_0:
    pop rax
addr_2497_1:
    mov qword rax, 1
    push rax
addr_2497_2:
addr_2498:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2499:
    push str_59
addr_2500:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2501
    jmp addr_58
addr_2501:
    pop rbx
    test rbx, rbx
    jz addr_2503
addr_2502:
addr_2502_0:
    pop rax
addr_2502_1:
    mov qword rax, 3
    push rax
addr_2502_2:
addr_2503:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2504:
    push str_60
addr_2505:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2506
    jmp addr_58
addr_2506:
    pop rbx
    test rbx, rbx
    jz addr_2508
addr_2507:
addr_2507_0:
    pop rax
addr_2507_1:
    mov qword rax, 4
    push rax
addr_2507_2:
addr_2508:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2509:
    push str_61
addr_2510:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2511
    jmp addr_58
addr_2511:
    pop rbx
    test rbx, rbx
    jz addr_2513
addr_2512:
addr_2512_0:
    pop rax
addr_2512_1:
    mov qword rax, 5
    push rax
addr_2512_2:
addr_2513:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2514:
    push str_62
addr_2515:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2516
    jmp addr_58
addr_2516:
    pop rbx
    test rbx, rbx
    jz addr_2518
addr_2517:
addr_2517_0:
    pop rax
addr_2517_1:
    mov qword rax, 6
    push rax
addr_2517_2:
addr_2518:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2519:
    push str_63
addr_2520:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2521
    jmp addr_58
addr_2521:
    pop rbx
    test rbx, rbx
    jz addr_2523
addr_2522:
addr_2522_0:
    pop rax
addr_2522_1:
    mov qword rax, 36
    push rax
addr_2522_2:
addr_2523:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2524:
    push str_64
addr_2525:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2526
    jmp addr_58
addr_2526:
    pop rbx
    test rbx, rbx
    jz addr_2528
addr_2527:
addr_2527_0:
    pop rax
addr_2527_1:
    mov qword rax, 6
    push rax
addr_2527_2:
addr_2528:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2529:
    push str_65
addr_2530:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2531
    jmp addr_58
addr_2531:
    pop rbx
    test rbx, rbx
    jz addr_2533
addr_2532:
addr_2532_0:
    pop rax
addr_2532_1:
    mov qword rax, 7
    push rax
addr_2532_2:
addr_2533:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2534:
    push str_66
addr_2535:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2536
    jmp addr_58
addr_2536:
    pop rbx
    test rbx, rbx
    jz addr_2538
addr_2537:
addr_2537_0:
    pop rax
addr_2537_1:
    mov qword rax, 8
    push rax
addr_2537_2:
addr_2538:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2539:
    push str_67
addr_2540:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2541
    jmp addr_58
addr_2541:
    pop rbx
    test rbx, rbx
    jz addr_2543
addr_2542:
addr_2542_0:
    pop rax
addr_2542_1:
    mov qword rax, 9
    push rax
addr_2542_2:
addr_2543:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2544:
    push str_68
addr_2545:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2546
    jmp addr_58
addr_2546:
    pop rbx
    test rbx, rbx
    jz addr_2548
addr_2547:
addr_2547_0:
    pop rax
addr_2547_1:
    mov qword rax, 10
    push rax
addr_2547_2:
addr_2548:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2549:
    push str_69
addr_2550:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2551
    jmp addr_58
addr_2551:
    pop rbx
    test rbx, rbx
    jz addr_2553
addr_2552:
addr_2552_0:
    pop rax
addr_2552_1:
    mov qword rax, 12
    push rax
addr_2552_2:
addr_2553:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2554:
    push str_70
addr_2555:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2556
    jmp addr_58
addr_2556:
    pop rbx
    test rbx, rbx
    jz addr_2558
addr_2557:
addr_2557_0:
    pop rax
addr_2557_1:
    mov qword rax, 11
    push rax
addr_2557_2:
addr_2558:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2559:
    push str_71
addr_2560:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2561
    jmp addr_58
addr_2561:
    pop rbx
    test rbx, rbx
    jz addr_2563
addr_2562:
addr_2562_0:
    pop rax
addr_2562_1:
    mov qword rax, 11
    push rax
addr_2562_2:
addr_2563:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2564:
    push str_72
addr_2565:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2566
    jmp addr_58
addr_2566:
    pop rbx
    test rbx, rbx
    jz addr_2568
addr_2567:
addr_2567_0:
    pop rax
addr_2567_1:
    mov qword rax, 13
    push rax
addr_2567_2:
addr_2568:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2569:
    push str_73
addr_2570:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2571
    jmp addr_58
addr_2571:
    pop rbx
    test rbx, rbx
    jz addr_2573
addr_2572:
addr_2572_0:
    pop rax
addr_2572_1:
    mov qword rax, 14
    push rax
addr_2572_2:
addr_2573:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2574:
    push str_74
addr_2575:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2576
    jmp addr_58
addr_2576:
    pop rbx
    test rbx, rbx
    jz addr_2578
addr_2577:
addr_2577_0:
    pop rax
addr_2577_1:
    mov qword rax, 14
    push rax
addr_2577_2:
addr_2578:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2579:
    push str_75
addr_2580:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2581
    jmp addr_58
addr_2581:
    pop rbx
    test rbx, rbx
    jz addr_2583
addr_2582:
addr_2582_0:
    pop rax
addr_2582_1:
    mov qword rax, 15
    push rax
addr_2582_2:
addr_2583:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2584:
    push str_76
addr_2585:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2586
    jmp addr_58
addr_2586:
    pop rbx
    test rbx, rbx
    jz addr_2588
addr_2587:
addr_2587_0:
    pop rax
addr_2587_1:
    mov qword rax, 16
    push rax
addr_2587_2:
addr_2588:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2589:
    push str_77
addr_2590:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2591
    jmp addr_58
addr_2591:
    pop rbx
    test rbx, rbx
    jz addr_2593
addr_2592:
addr_2592_0:
    pop rax
addr_2592_1:
    mov qword rax, 17
    push rax
addr_2592_2:
addr_2593:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2594:
    push str_78
addr_2595:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2596
    jmp addr_58
addr_2596:
    pop rbx
    test rbx, rbx
    jz addr_2598
addr_2597:
addr_2597_0:
    pop rax
addr_2597_1:
    mov qword rax, 37
    push rax
addr_2597_2:
addr_2598:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2599:
    push str_79
addr_2600:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2601
    jmp addr_58
addr_2601:
    pop rbx
    test rbx, rbx
    jz addr_2603
addr_2602:
addr_2602_0:
    pop rax
addr_2602_1:
    mov qword rax, 20
    push rax
addr_2602_2:
addr_2603:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2604:
    push str_80
addr_2605:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2606
    jmp addr_58
addr_2606:
    pop rbx
    test rbx, rbx
    jz addr_2608
addr_2607:
addr_2607_0:
    pop rax
addr_2607_1:
    mov qword rax, 22
    push rax
addr_2607_2:
addr_2608:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2609:
    push str_81
addr_2610:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2611
    jmp addr_58
addr_2611:
    pop rbx
    test rbx, rbx
    jz addr_2613
addr_2612:
addr_2612_0:
    pop rax
addr_2612_1:
    mov qword rax, 23
    push rax
addr_2612_2:
addr_2613:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2614:
    push str_82
addr_2615:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2616
    jmp addr_58
addr_2616:
    pop rbx
    test rbx, rbx
    jz addr_2618
addr_2617:
addr_2617_0:
    pop rax
addr_2617_1:
    mov qword rax, 27
    push rax
addr_2617_2:
addr_2618:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2619:
    push str_83
addr_2620:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2621
    jmp addr_58
addr_2621:
    pop rbx
    test rbx, rbx
    jz addr_2623
addr_2622:
addr_2622_0:
    pop rax
addr_2622_1:
    mov qword rax, 30
    push rax
addr_2622_2:
addr_2623:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2624:
    push str_84
addr_2625:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2626
    jmp addr_58
addr_2626:
    pop rbx
    test rbx, rbx
    jz addr_2628
addr_2627:
addr_2627_0:
    pop rax
addr_2627_1:
    mov qword rax, 31
    push rax
addr_2627_2:
addr_2628:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2629:
    push str_85
addr_2630:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2631
    jmp addr_58
addr_2631:
    pop rbx
    test rbx, rbx
    jz addr_2633
addr_2632:
addr_2632_0:
    pop rax
addr_2632_1:
    mov qword rax, 32
    push rax
addr_2632_2:
addr_2633:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2634:
    push str_86
addr_2635:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2636
    jmp addr_58
addr_2636:
    pop rbx
    test rbx, rbx
    jz addr_2638
addr_2637:
addr_2637_0:
    pop rax
addr_2637_1:
    mov qword rax, 33
    push rax
addr_2637_2:
addr_2638:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2639:
    push str_87
addr_2640:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2641
    jmp addr_58
addr_2641:
    pop rbx
    test rbx, rbx
    jz addr_2643
addr_2642:
addr_2642_0:
    pop rax
addr_2642_1:
    mov qword rax, 34
    push rax
addr_2642_2:
addr_2643:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2644:
    push str_88
addr_2645:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2646
    jmp addr_58
addr_2646:
    pop rbx
    test rbx, rbx
    jz addr_2648
addr_2647:
addr_2647_0:
    pop rax
addr_2647_1:
    mov qword rax, 35
    push rax
addr_2647_2:
addr_2648:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2649:
    push str_89
addr_2650:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2651
    jmp addr_58
addr_2651:
    pop rbx
    test rbx, rbx
    jz addr_2653
addr_2652:
addr_2652_0:
    pop rax
addr_2652_1:
    mov qword rax, 37
    push rax
addr_2652_2:
addr_2653:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2654:
    push str_90
addr_2655:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2656
    jmp addr_58
addr_2656:
    pop rbx
    test rbx, rbx
    jz addr_2658
addr_2657:
addr_2657_0:
    pop rax
addr_2657_1:
    mov qword rax, 38
    push rax
addr_2657_2:
addr_2658:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2659:
    push str_91
addr_2660:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2661
    jmp addr_58
addr_2661:
    pop rbx
    test rbx, rbx
    jz addr_2663
addr_2662:
addr_2662_0:
    pop rax
addr_2662_1:
    mov qword rax, 39
    push rax
addr_2662_2:
addr_2663:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2664:
    push str_92
addr_2665:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2666
    jmp addr_58
addr_2666:
    pop rbx
    test rbx, rbx
    jz addr_2668
addr_2667:
addr_2667_0:
    pop rax
addr_2667_1:
    mov qword rax, 40
    push rax
addr_2667_2:
addr_2668:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2669:
    push str_93
addr_2670:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2671
    jmp addr_58
addr_2671:
    pop rbx
    test rbx, rbx
    jz addr_2673
addr_2672:
addr_2672_0:
    pop rax
addr_2672_1:
    mov qword rax, 41
    push rax
addr_2672_2:
addr_2673:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2674:
    push str_94
addr_2675:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2676
    jmp addr_58
addr_2676:
    pop rbx
    test rbx, rbx
    jz addr_2678
addr_2677:
addr_2677_0:
    pop rax
addr_2677_1:
    mov qword rax, 42
    push rax
addr_2677_2:
addr_2678:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2679:
    push str_95
addr_2680:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2681
    jmp addr_58
addr_2681:
    pop rbx
    test rbx, rbx
    jz addr_2683
addr_2682:
addr_2682_0:
    pop rax
addr_2682_1:
    mov qword rax, 43
    push rax
addr_2682_2:
addr_2683:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2684:
    push str_96
addr_2685:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2686
    jmp addr_58
addr_2686:
    pop rbx
    test rbx, rbx
    jz addr_2688
addr_2687:
addr_2687_0:
    pop rax
addr_2687_1:
    mov qword rax, 44
    push rax
addr_2687_2:
addr_2688:
    pop rax
    pop rbx
    push rbx
    push rax
    push rbx
addr_2689:
    push str_97
addr_2690:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2691
    jmp addr_58
addr_2691:
    pop rbx
    test rbx, rbx
    jz addr_2693
addr_2692:
addr_2692_0:
    pop rax
addr_2692_1:
    mov qword rax, 45
    push rax
addr_2692_2:
addr_2693:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2694:
    pop rax
addr_2695:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2696:
addr_2697:
    ; - proc getopname 1 1
addr_2698:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2699
    jmp addr_381
addr_2699:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2700:
addr_2701:
    ; - proc clean 0 0
addr_2702:
    push addr_1025
addr_2703:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2704:
    pop rax
    push rax
    push rax
addr_2705:
    mov qword rax, 0
    push rax
addr_2706:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2707:
    pop rbx
    test rbx, rbx
    jz addr_2709
addr_2708:
addr_2708_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2708_1
    jmp addr_1118
addr_2708_1:
    mov qword rax, 0
    push rax
addr_2708_2:
addr_2709:
    pop rax
addr_2710:
    push mem+4509
addr_2711:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2712:
    pop rax
    push rax
    push rax
addr_2713:
    mov qword rax, 0
    push rax
addr_2714:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovne rcx, rdx
    push rcx
addr_2715:
    pop rbx
    test rbx, rbx
    jz addr_2717
addr_2716:
addr_2716_0:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2716_1
    jmp addr_1118
addr_2716_1:
    mov qword rax, 0
    push rax
addr_2716_2:
addr_2717:
    pop rax
addr_2718:
    push mem+319
addr_2719:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2720:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2721
    jmp addr_2024
addr_2721:
    push mem+311
addr_2722:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2723:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2724
    jmp addr_2024
addr_2724:
    push mem+327
addr_2725:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2726:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2727
    jmp addr_2024
addr_2727:
    push mem+343
addr_2728:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2729:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2730
    jmp addr_2024
addr_2730:
    push mem+335
addr_2731:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2732:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2733
    jmp addr_2024
addr_2733:
    push mem+4533
addr_2734:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2735:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2736
    jmp addr_1540
addr_2736:
    push mem+4485
addr_2737:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2738:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2739
    jmp addr_805
addr_2739:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2740:
addr_2741:
    ; - proc exit 0 0
addr_2742:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2743
    jmp addr_2702
addr_2743:
    mov qword rax, -1
    push rax
addr_2744:
    mov rax, 60
    pop rdi
    syscall
addr_2745:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2746:
addr_2747:
    ; - proc checkpopb 2 0
addr_2748:
    push mem+7077
addr_2749:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2750:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2751:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_2752:
    push mem+7077
addr_2753:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2754:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2755:
    pop rax
addr_2756:
    push mem+7077
addr_2757:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2758:
    mov qword rax, 0
    push rax
addr_2759:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_2760:
    pop rbx
    test rbx, rbx
    jz addr_2762
addr_2761:
addr_2761_0:
    push str_98
addr_2761_1:
    push str_99
addr_2761_2:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2761_3
    jmp addr_950
addr_2761_3:
    pop rax
    push rax
    push rax
addr_2761_4:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2761_5
    jmp addr_967
addr_2761_5:
    push str_100
addr_2761_6:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2761_7
    jmp addr_967
addr_2761_7:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2761_8
    jmp addr_2346
addr_2761_8:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2761_9
    jmp addr_976
addr_2761_9:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2761_10
    jmp addr_2742
addr_2761_10:
addr_2762:
    pop rax
addr_2763:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2764:
addr_2765:
    ; - proc addstackb 1 0
addr_2766:
    push mem+7077
addr_2767:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2768:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2769:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2770:
    push mem+7077
addr_2771:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2772:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2773:
    pop rax
addr_2774:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2775:
addr_2776:
    ; - proc checkpop 2 0
addr_2777:
    push mem+7069
addr_2778:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2779:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2780:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_2781:
    push mem+7069
addr_2782:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2783:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2784:
    pop rax
addr_2785:
    push mem+7069
addr_2786:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2787:
    mov qword rax, 0
    push rax
addr_2788:
    mov rcx, 0
    mov rdx, 1
    pop rbx
    pop rax
    cmp rax, rbx
    cmovl rcx, rdx
    push rcx
addr_2789:
    pop rbx
    test rbx, rbx
    jz addr_2791
addr_2790:
addr_2790_0:
    push str_101
addr_2790_1:
    push str_102
addr_2790_2:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2790_3
    jmp addr_950
addr_2790_3:
    pop rax
    push rax
    push rax
addr_2790_4:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2790_5
    jmp addr_967
addr_2790_5:
    push str_103
addr_2790_6:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2790_7
    jmp addr_967
addr_2790_7:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2790_8
    jmp addr_2346
addr_2790_8:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2790_9
    jmp addr_976
addr_2790_9:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2790_10
    jmp addr_2742
addr_2790_10:
addr_2791:
    pop rax
addr_2792:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2793:
addr_2794:
    ; - proc addstack 1 0
addr_2795:
    push mem+7069
addr_2796:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2797:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2798:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2799:
    push mem+7069
addr_2800:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2801:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2802:
    pop rax
addr_2803:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2804:
addr_2805:
    ; - proc identstackpush 1 0
addr_2806:
    push mem+4533
addr_2807:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2808:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2809:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2810
    jmp addr_1209
addr_2810:
    pop rax
addr_2811:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2812:
addr_2813:
    ; - proc identstackpop 0 1
addr_2814:
    push mem+4533
addr_2815:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2816:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2817
    jmp addr_1444
addr_2817:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2818:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2819:
    pop rax
addr_2820:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2821:
addr_2822:
    ; - proc inner 1 1
addr_2823:
    mov qword rax, 1
    push rax
addr_2824:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2825:
    pop rax
    push rax
    push rax
addr_2826:
    pop rax
    push rax
    push rax
addr_2827:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2828
    jmp addr_15
addr_2828:
    mov qword rax, 1
    push rax
addr_2829:
    pop rbx
    pop rax
    sub rax, rbx
    push rax
addr_2830:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2831:
    mov qword rax, 0
    push rax
addr_2832:
    pop rbx
    pop rax
    mov byte [rax], bl
    push rax
addr_2833:
    pop rax
addr_2834:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2835:
addr_2836:
    ; - proc getstringidx 0 1
addr_2837:
    push mem+4501
addr_2838:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2839:
    pop rax
    push rax
    push rax
addr_2840:
    mov qword rax, 1
    push rax
addr_2841:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2842:
    push mem+4501
addr_2843:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2844:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2845:
    pop rax
addr_2846:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2847:
addr_2848:
    ; - proc getaddr 0 1
addr_2849:
    push mem+4997
addr_2850:
    mov qword rax, 0
    push rax
addr_2851:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2852:
    pop rax
addr_2853:
    push mem+4989
addr_2854:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2855:
    pop rax
    push rax
    push rax
addr_2856:
    mov qword rax, 1
    push rax
addr_2857:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2858:
    push mem+4989
addr_2859:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2860:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2861:
    pop rax
addr_2862:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2863:
addr_2864:
    ; - proc getsubaddr 0 1
addr_2865:
    push mem+4997
addr_2866:
    pop rax
    xor rbx, rbx
    mov rbx, [rax]
    push rbx
addr_2867:
    pop rax
    push rax
    push rax
addr_2868:
    mov qword rax, 1
    push rax
addr_2869:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2870:
    push mem+4997
addr_2871:
    pop rax
    pop rbx
    push rax
    push rbx
addr_2872:
    pop rbx
    pop rax
    mov qword [rax], rbx
    push rax
addr_2873:
    pop rax
addr_2874:
    mov rax, [ret_stack_rsp]
    sub rax, 8
    mov qword [ret_stack_rsp], rax
    add rax, 8
    jmp qword [rax]
addr_2875:
addr_2876:
    ; - proc noprocblock 0 0
addr_2877:
    mov qword rax, 0
    push rax
addr_2878:
    mov qword rax, 1
    push rax
addr_2879:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2880
    jmp addr_976
addr_2880:
    push str_104
addr_2881:
    push str_105
addr_2882:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2883
    jmp addr_950
addr_2883:
    push mem+2428
addr_2884:
    mov qword rax, 1
    push rax
addr_2885:
    pop rax
    pop rbx
    add rax, rbx
    push rax
addr_2886:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2887
    jmp addr_967
addr_2887:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2888
    jmp addr_2346
addr_2888:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2889
    jmp addr_976
addr_2889:
    mov rax, [ret_stack_rsp]
    add rax, 8
    mov qword [ret_stack_rsp], rax
    mov qword [rax], addr_2890
    jmp addr_2742
addr_2890:
