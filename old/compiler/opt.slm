inc "stdlib/string.slm"
inc "stdlib/regex.slm"
inc "stdlib/loops.slm"

class filelines
  prop fs int.SIZE
  prop str int.SIZE

  var tmp int.SIZE
  var tmpchar int.SIZE

  oper proc new 2 1
    int.SIZE
    (heap.alloc)
    filelines.tmp swap put disc

    (filestream.new)

    filelines.tmp read filelines.fs . swap put disc
    filelines.tmp read filelines.str . (str.new) put disc

    filelines.tmp read

    ret
  end

  push proc iter 1 2
    filelines.tmp swap put disc

    filelines.tmp read filelines.str . (str.new) put disc
    
    filelines.tmp read filelines.lines . read
    filelines.tmpchar 0 put disc
    do
      filelines.tmp read filelines.fs . read (filestream.readchar)
      filelines.tmpchar swap putc disc

      filelines.tmp read filelines.str . read
      filelines.tmpchar 
      (str.catc)
      
      filelines.tmpchar readc 0 !=
      filelines.tmpchar readc 10 != &&
    end
    disc

    filelines.tmp read

    ret
  end
end

var optmatch int.SIZE

{
push r.x
pop r.x

:
either
mov r.x r.x
or
nothing
}
oper proc opt1 1 0
  filelines.new
  loops.foreach : 1 0
    optmatch read
    copy 0 == if
      "$push r.x^" regex.match if
      
    end
  end

  ret
end

{
push dword number
pop r.x

:
mov r.x, number
}